// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: treasure.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Treasure {

  /// <summary>Holder for reflection information generated from treasure.proto</summary>
  public static partial class TreasureReflection {

    #region Descriptor
    /// <summary>File descriptor for treasure.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TreasureReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg50cmVhc3VyZS5wcm90bxIIdHJlYXN1cmUaEWJhc2Uvd3NiYXNlLnByb3Rv",
            "IocOCglNZXNzYWdlSWQi+Q0KBEVudW0SCAoETm9uZRAAEg4KCUhlYXJ0YmVh",
            "dBDoBxINCghSZWdpc3RlchDpBxIRCgxSZWdpc3RlclJlc3AQ6gcSCQoETW92",
            "ZRDrBxIQCgtKb2luUm9vbVJlcRDsBxIRCgxKb2luUm9vbVJlc3AQ7QcSEgoN",
            "Q3JlYXRlUm9vbVJlcRDuBxITCg5DcmVhdGVSb29tUmVzcBDvBxIQCgtSb29t",
            "TGlzdFJlcRDwBxIRCgxSb29tTGlzdFJlc3AQ8QcSFQoQRW50ZXJUcmVhc3Vy",
            "ZVJlcRDyBxIWChFFbnRlclRyZWFzdXJlUmVzcBDzBxIbChZPdGhlckVudGVy",
            "VHJlYXN1cmVQdXNoEPQHEhsKFk90aGVyTGVhdmVUcmVhc3VyZVB1c2gQ9QcS",
            "FAoPSW52aXRlRnJpZW5kUmVxEPYHEhUKEEludml0ZUZyaWVuZFJlc3AQ9wcS",
            "FAoPT3RoZXJJbnZpdGVQdXNoEPgHEhMKDkFncmVlSW52aXRlUmVxEPkHEhQK",
            "D0FncmVlSW52aXRlUmVzcBD6BxIWChFJbnZpdGVKb2luVGVhbVJlcRD7BxIX",
            "ChJJbnZpdGVKb2luVGVhbVJlc3AQ/AcSFQoQQWdyZWVKb2luVGVhbVJlcRD9",
            "BxIWChFBZ3JlZUpvaW5UZWFtUmVzcBD+BxIcChdPdGhlckludml0ZUpvaW5U",
            "ZWFtUHVzaBD/BxIUCg9SZWZ1c2VJbnZpdGVSZXEQgAgSFQoQUmVmdXNlSW52",
            "aXRlUmVzcBCBCBIVChBSZWZ1c2VJbnZpdGVQdXNoEIIIEhgKE1JlZnVzZU5l",
            "YXJJbnZpdGVSZXEQgwgSGQoUUmVmdXNlTmVhckludml0ZVJlc3AQhAgSGQoU",
            "UmVmdXNlTmVhckludml0ZVB1c2gQhQgSEQoMTGVhdmVUZWFtUmVxEIYIEhIK",
            "DUxlYXZlVGVhbVJlc3AQhwgSEwoOVGVhbVVwZGF0ZVB1c2gQiAgSEAoLVGVh",
            "bUluZm9SZXEQiQgSEQoMVGVhbUluZm9SZXNwEIoIEhIKDUNoYW5nZVNraW5S",
            "ZXEQiwgSEwoOQ2hhbmdlU2tpblJlc3AQjAgSGAoTT3RoZXJDaGFuZ2VTa2lu",
            "UHVzaBCNCBIQCgtEb0FjdGlvblJlcRCOCBIRCgxEb0FjdGlvblJlc3AQjwgS",
            "FgoRT3RoZXJEb0FjdGlvblB1c2gQkAgSEAoLT3BlblRpbWVSZXEQkQgSEQoM",
            "T3BlblRpbWVSZXNwEJIIEhUKEFJlYWR5VHJlYXN1cmVSZXEQkwgSFgoRUmVh",
            "ZHlUcmVhc3VyZVJlc3AQlAgSFgoRUmVhZHlUcmVhc3VyZVB1c2gQlQgSFgoR",
            "U3RhcnRUcmVhc3VyZVB1c2gQlggSDwoKUmV3YXJkUHVzaBCXCBIPCgpOb3Rp",
            "Y2VQdXNoEJgIEhEKDE5ldFN0YXRlUHVzaBCZCBIaChVUcmVhc3VyZVJlY29y",
            "ZExpc3RSZXEQmggSGwoWVHJlYXN1cmVSZWNvcmRMaXN0UmVzcBCbCBIYChND",
            "aGVja0JlZ2luTGF1bmNoUmVxEJwIEhkKFENoZWNrQmVnaW5MYXVuY2hSZXNw",
            "EJ0IEhsKFkJlZ2luTGF1bmNoQ29tcGxldGVSZXEQnggSHAoXQmVnaW5MYXVu",
            "Y2hDb21wbGV0ZVJlc3AQnwgSHgoZVHJlYXN1cmVSZXdhcmRDb25mTGlzdFJl",
            "cRCgCBIfChpUcmVhc3VyZVJld2FyZENvbmZMaXN0UmVzcBChCBIXChJPdGhl",
            "clVzZXJTdGF0ZVB1c2gQoggSFAoPS2lja09mZmxpbmVQdXNoEKMIEhwKF1Ry",
            "ZWFzdXJlQWN0aXZpdHlFbmRQdXNoEKQIEhQKD0ZyaWVuZFN0YXRlUHVzaBCl",
            "CBIbChZDYW5jZWxSZWFkeVRyZWFzdXJlUmVxEKYIEhwKF0NhbmNlbFJlYWR5",
            "VHJlYXN1cmVSZXNwEKcIEhwKF0NhbmNlbFJlYWR5VHJlYXN1cmVQdXNoEKgI",
            "EhAKC1Jvb21JbmZvUmVxEKkIEhEKDFJvb21JbmZvUmVzcBCqCBIcChdUcmVh",
            "c3VyZUJyb2Nhc3RUb0FsbFJlcRCrCBIdChhUcmVhc3VyZUJyb2Nhc3RUb0Fs",
            "bFJlc3AQrAgSDwoKU2l0ZG93blJlcRCtCBIQCgtTaXRkb3duUmVzcBCuCBIQ",
            "CgtTaXRkb3duUHVzaBCvCBISCg1TdW1tb25CYWNrUmVxELAIEhMKDlN1bW1v",
            "bkJhY2tSZXNwELEIEhEKDExlYXZlUm9vbVJlcRCyCBISCg1MZWF2ZVJvb21S",
            "ZXNwELMIEhIKDUJlYWNoU2hlbGxSZXEQtAgSEwoOQmVhY2hTaGVsbFJlc3AQ",
            "tQgigAEKB1NjZW5lSWQidQoERW51bRIICgROb25lEAASDwoLUGFybG9yU2Nl",
            "bmUQARIMCghEb2dTY2VuZRACEhAKDFNoZWx0ZXJTY2VuZRADEhMKD1RyZWFz",
            "dXJlRGlnZ2luZxAEEgsKB0JlZHJvb20QBRIQCgxSYWluYm93QmVhY2gQBiIu",
            "CgtSZWdpc3RlclJlcRINCgV0b2tlbhgBIAEoCRIQCghzY2VuZV9pZBgCIAEo",
            "DSJ4CgxSZWdpc3RlclJlc3ASDwoHdXNlcl9pZBgBIAEoBBITCgtzdGF0dXNf",
            "Y29kZRgCIAEoDRIgChh0cmVhc3VyZV9lZmZpY2llbmN5X3RpbWUYAyABKA0S",
            "IAoYdHJlYXN1cmVfZWZmaWNpZW5jeV9idWZmGAQgASgNIiIKD0tpY2tPZmZs",
            "aW5lUHVzaBIPCgd1c2VyX2lkGAEgASgEIkcKD1NhdmVVc2VySW5mb1JlcRIP",
            "Cgd1c2VyX2lkGAEgASgEEhEKCUF2YXRhcklkcxgCIAMoAxIQCghzY2VuZV9p",
            "ZBgDIAEoDSJrChBTYXZlVXNlckluZm9SZXNwEhMKC3N0YXR1c19jb2RlGAEg",
            "ASgNEiAKGHRyZWFzdXJlX2VmZmljaWVuY3lfdGltZRgCIAEoDRIgChh0cmVh",
            "c3VyZV9lZmZpY2llbmN5X2J1ZmYYAyABKA0iSwoMTmV0d29ya1N0YXRlIjsK",
            "BEVudW0SCAoETm9uZRAAEgoKBk9ubGluZRABEgsKB09mZmxpbmUQAhIQCgxS",
            "ZWNvbm5lY3RpbmcQAyIgCg1DcmVhdGVSb29tUmVxEg8KB3VzZXJfaWQYASAB",
            "KAQiVwoOQ3JlYXRlUm9vbVJlc3ASEwoLc3RhdHVzX2NvZGUYASABKA0SEgoK",
            "c3RhdHVzX21zZxgCIAEoCRIcCgRyb29tGAMgASgLMg4udHJlYXN1cmUuUm9v",
            "bSJBCgtSb29tTGlzdFJlcRINCgVzdGFydBgBIAEoDRIRCglwYWdlX3NpemUY",
            "AiABKA0SEAoIc2NlbmVfaWQYAyABKA0i1QMKDFJvb21Vc2VySW5mbxIPCgd1",
            "c2VyX2lkGAEgASgEEg8KB3Jvb21faWQYAiABKA0SDQoFc3RhdGUYAyABKA0S",
            "EQoJdXNlcl9uYW1lGAQgASgJEg8KB3BpY191cmwYBSABKAkSDgoGZ2VuZGVy",
            "GAYgASgJEgwKBGNvZGUYByABKAkSCwoDYWdlGAggASgJEhAKCGNvbnN0ZWxs",
            "GAkgASgJEhIKCmF2YXRhcl9pZHMYCiADKAMSEAoIcGFydG5lcnMYCyADKAQS",
            "DwoHaW52aXRlcxgMIAMoBBINCgVtb2RlbBgNIAEoDRINCgVzdGFydBgOIAEo",
            "DRIfCgdjdXJfcG9zGA8gASgLMg4udHJlYXN1cmUuTW92ZRIaChJwYXJ0bmVy",
            "X2xlYXZlX3RpbWUYECABKA0SFQoNbmV0d29ya19zdGF0ZRgRIAEoDRISCgp0",
            "b191c2VyX2lkGBIgASgEEhEKCWhlYXJ0YmVhdBgTIAEoDRIUCgxjaXJjbGVf",
            "aW5kZXgYFCABKA0SFAoMeXVueGluX2FjY2lkGBUgASgJEhQKDHl1bnhpbl90",
            "b2tlbhgWIAEoCRIQCghzY2VuZV9pZBgXIAEoDRIPCgdzaXRkb3duGBggASgJ",
            "InAKBFJvb20SDwoHcm9vbV9pZBgBIAEoDRIpCgl1c2VyX2xpc3QYAiADKAsy",
            "Fi50cmVhc3VyZS5Sb29tVXNlckluZm8SFAoMY2hhdF9yb29tX2lkGAMgASgE",
            "EhYKDmNoYXRfcm9vbV9hZGRyGAQgAygJIh4KC1Jvb21JbmZvUmVxEg8KB3Jv",
            "b21faWQYASABKA0iRgoMUm9vbUluZm9SZXNwEhMKC3N0YXR1c19jb2RlGAEg",
            "ASgNEiEKCXJvb21faW5mbxgCIAEoCzIOLnRyZWFzdXJlLlJvb20iMQoMUm9v",
            "bUxpc3RSZXNwEiEKCXJvb21fbGlzdBgBIAMoCzIOLnRyZWFzdXJlLlJvb20i",
            "LwoLSm9pblJvb21SZXESDwoHdXNlcl9pZBgBIAEoBBIPCgdyb29tX2lkGAIg",
            "ASgNIqEBCgxKb2luUm9vbVJlc3ASEwoLc3RhdHVzX2NvZGUYASABKA0SEgoK",
            "c3RhdHVzX21zZxgCIAEoCRIPCgdyb29tX2lkGAMgASgNEikKCXVzZXJfbGlz",
            "dBgEIAMoCzIWLnRyZWFzdXJlLlJvb21Vc2VySW5mbxIUCgxjaGF0X3Jvb21f",
            "aWQYBSABKAQSFgoOY2hhdF9yb29tX2FkZHIYBiADKAkiHwoMTGVhdmVSb29t",
            "UmVxEg8KB3VzZXJfaWQYASABKAQiJAoNTGVhdmVSb29tUmVzcBITCgtzdGF0",
            "dXNfY29kZRgBIAEoDSJKChBFbnRlclRyZWFzdXJlUmVxEg8KB3VzZXJfaWQY",
            "ASABKAQSFAoMZnJvbV91c2VyX2lkGAIgASgEEg8KB2xhbmRfaWQYAyABKAki",
            "owEKEUVudGVyVHJlYXN1cmVSZXNwEhMKC3N0YXR1c19jb2RlGAEgASgNEiEK",
            "CXJvb21faW5mbxgCIAEoCzIOLnRyZWFzdXJlLlJvb20SFAoMeXVueGluX3Rv",
            "a2VuGAMgASgJEhQKDHl1bnhpbl9hY2NpZBgEIAEoCRIqCgpvd25lcl9pbmZv",
            "GAUgASgLMhYudHJlYXN1cmUuUm9vbVVzZXJJbmZvIlsKFk90aGVyRW50ZXJU",
            "cmVhc3VyZVB1c2gSLQoNbmV3X3VzZXJfaW5mbxgBIAEoCzIWLnRyZWFzdXJl",
            "LlJvb21Vc2VySW5mbxISCgp0b191c2VyX2lkGAIgASgEIkIKFk90aGVyTGVh",
            "dmVUcmVhc3VyZVB1c2gSFAoMZnJvbV91c2VyX2lkGAEgASgEEhIKCnRvX3Vz",
            "ZXJfaWQYAiABKAQiXAoST3RoZXJVc2VyU3RhdGVQdXNoEhQKDGZyb21fdXNl",
            "cl9pZBgBIAEoBBISCgp0b191c2VyX2lkGAIgASgEEg0KBXN0YXRlGAMgASgN",
            "Eg0KBWluZGV4GAQgASgNIjsKD0ludml0ZUZyaWVuZFJlcRIUCgxmcm9tX3Vz",
            "ZXJfaWQYASABKAQSEgoKdG9fdXNlcl9pZBgCIAEoBCInChBJbnZpdGVGcmll",
            "bmRSZXNwEhMKC3N0YXR1c19jb2RlGAEgASgNIlUKD090aGVySW52aXRlUHVz",
            "aBIuCg5mcm9tX3VzZXJfaW5mbxgBIAEoCzIWLnRyZWFzdXJlLlJvb21Vc2Vy",
            "SW5mbxISCgp0b191c2VyX2lkGAIgASgEIjoKDkFncmVlSW52aXRlUmVxEhQK",
            "DGZyb21fdXNlcl9pZBgBIAEoBBISCgp0b191c2VyX2lkGAIgASgEIkQKD0Fn",
            "cmVlSW52aXRlUmVzcBITCgtzdGF0dXNfY29kZRgBIAEoDRIcCgRyb29tGAIg",
            "ASgLMg4udHJlYXN1cmUuUm9vbSI7Cg9SZWZ1c2VJbnZpdGVSZXESFAoMZnJv",
            "bV91c2VyX2lkGAEgASgEEhIKCnRvX3VzZXJfaWQYAiABKAQiJwoQUmVmdXNl",
            "SW52aXRlUmVzcBITCgtzdGF0dXNfY29kZRgBIAEoDSJUChBSZWZ1c2VJbnZp",
            "dGVQdXNoEhQKDGZyb21fdXNlcl9pZBgBIAEoBBISCgp0b191c2VyX2lkGAIg",
            "ASgEEhYKDmZyb21fdXNlcl9uYW1lGAMgASgJIk4KEUludml0ZUpvaW5UZWFt",
            "UmVxEhQKDGZyb21fdXNlcl9pZBgBIAEoBBISCgp0b191c2VyX2lkGAIgASgE",
            "Eg8KB3Jvb21faWQYAyABKA0iKQoSSW52aXRlSm9pblRlYW1SZXNwEhMKC3N0",
            "YXR1c19jb2RlGAEgASgNIm4KF090aGVySW52aXRlSm9pblRlYW1QdXNoEi4K",
            "DmZyb21fdXNlcl9pbmZvGAEgASgLMhYudHJlYXN1cmUuUm9vbVVzZXJJbmZv",
            "EhIKCnRvX3VzZXJfaWQYAiABKAQSDwoHcm9vbV9pZBgDIAEoDSJNChBBZ3Jl",
            "ZUpvaW5UZWFtUmVxEhQKDGZyb21fdXNlcl9pZBgBIAEoBBISCgp0b191c2Vy",
            "X2lkGAIgASgEEg8KB3Jvb21faWQYAyABKA0iKAoRQWdyZWVKb2luVGVhbVJl",
            "c3ASEwoLc3RhdHVzX2NvZGUYASABKA0iPwoTUmVmdXNlTmVhckludml0ZVJl",
            "cRIUCgxmcm9tX3VzZXJfaWQYASABKAQSEgoKdG9fdXNlcl9pZBgCIAEoBCIr",
            "ChRSZWZ1c2VOZWFySW52aXRlUmVzcBITCgtzdGF0dXNfY29kZRgBIAEoDSJY",
            "ChRSZWZ1c2VOZWFySW52aXRlUHVzaBIUCgxmcm9tX3VzZXJfaWQYASABKAQS",
            "EgoKdG9fdXNlcl9pZBgCIAEoBBIWCg5mcm9tX3VzZXJfbmFtZRgDIAEoCSJg",
            "CgtQbGF5ZXJTdGF0ZSJRCgRFbnVtEggKBE5vbmUQABIICgRJZGxlEAESDAoI",
            "R3JvdXBpbmcQAhILCgdJbnZpdGVkEAMSCQoFUmVhZHkQBBIPCgtUcmVhc3Vy",
            "ZWluZxAFIjYKDFBsYXlTdGF0ZVJlcRIQCgh1c2VyX2lkcxgBIAMoBBIUCgxm",
            "cm9tX3VzZXJfaWQYAiABKAQiNQoNUGxheVN0YXRlUmVzcBIkCgRsaXN0GAEg",
            "AygLMhYudHJlYXN1cmUuUm9vbVVzZXJJbmZvIh4KC1RlYW1JbmZvUmVxEg8K",
            "B3VzZXJfaWQYASABKAQiXQoMVGVhbUluZm9SZXNwEiQKBGxpc3QYASADKAsy",
            "Fi50cmVhc3VyZS5Sb29tVXNlckluZm8SEwoLc3RhdHVzX2NvZGUYAiABKA0S",
            "EgoKdG9fdXNlcl9pZBgDIAEoBCIfCgxMZWF2ZVRlYW1SZXESDwoHdXNlcl9p",
            "ZBgBIAEoBCIkCg1MZWF2ZVRlYW1SZXNwEhMKC3N0YXR1c19jb2RlGAEgASgN",
            "IkoKD0ZyaWVuZFN0YXRlUHVzaBIUCgxmcm9tX3VzZXJfaWQYASABKAQSEgoK",
            "dG9fdXNlcl9pZBgCIAEoBBINCgVzdGF0ZRgDIAEoDSIjChBSZWFkeVRyZWFz",
            "dXJlUmVxEg8KB3VzZXJfaWQYASABKAQiPAoRUmVhZHlUcmVhc3VyZVJlc3AS",
            "EwoLc3RhdHVzX2NvZGUYASABKA0SEgoKdGVzdF90b2tlbhgCIAEoCSJMChFS",
            "ZWFkeVRyZWFzdXJlUHVzaBISCgp0b191c2VyX2lkGAEgASgEEg0KBXN0YXRl",
            "GAIgASgNEhQKDGZyb21fdXNlcl9pZBgDIAEoBCIpChZDYW5jZWxSZWFkeVRy",
            "ZWFzdXJlUmVxEg8KB3VzZXJfaWQYASABKAQiLgoXQ2FuY2VsUmVhZHlUcmVh",
            "c3VyZVJlc3ASEwoLc3RhdHVzX2NvZGUYASABKA0iUgoXQ2FuY2VsUmVhZHlU",
            "cmVhc3VyZVB1c2gSEgoKdG9fdXNlcl9pZBgBIAEoBBINCgVzdGF0ZRgCIAEo",
            "DRIUCgxmcm9tX3VzZXJfaWQYAyABKAQiJwoRU3RhcnRUcmVhc3VyZVB1c2gS",
            "EgoKdG9fdXNlcl9pZBgBIAEoBCKTAgoOVHJlYXN1cmVSZWNvcmQSCgoCaWQY",
            "ASABKAQSDwoHdXNlcl9pZBgCIAEoBBIRCgl1c2VyX25hbWUYAyABKAkSDwoH",
            "cm9vbV9pZBgEIAEoDRISCgp0ZWFtX3VzZXJzGAUgASgJEhEKCXJld2FyZF9p",
            "ZBgGIAEoDRITCgtyZXdhcmRfbmFtZRgHIAEoCRIXCg9yZXdhcmRfcXVhbnRp",
            "dHkYCCABKA0SEwoLcmV3YXJkX3R5cGUYCSABKA0SEwoLcmV3YXJkX3JhcmUY",
            "CiABKA0SGQoRcmV3YXJkX2NvbGxlY3Rpb24YCyABKA0SEgoKY3JlYXRlZF9h",
            "dBgMIAEoAxISCgp1cGRhdGVkX2F0GA0gASgDIkEKF0NyZWF0ZVRyZWFzdXJl",
            "UmVjb3JkUmVxEiYKBGRhdGEYASABKAsyGC50cmVhc3VyZS5UcmVhc3VyZVJl",
            "Y29yZCJOChhDcmVhdGVUcmVhc3VyZVJlY29yZFJlc3ASCgoCaWQYASABKAMS",
            "EwoLc3RhdHVzX2NvZGUYAiABKA0SEQoJcmV3YXJkX2lkGAMgASgNIkEKF1Vw",
            "ZGF0ZVRyZWFzdXJlUmVjb3JkUmVxEiYKBGRhdGEYASABKAsyGC50cmVhc3Vy",
            "ZS5UcmVhc3VyZVJlY29yZCI7ChhVcGRhdGVUcmVhc3VyZVJlY29yZFJlc3AS",
            "CgoCaWQYASABKAMSEwoLc3RhdHVzX2NvZGUYAiABKA0iSQoVVHJlYXN1cmVS",
            "ZWNvcmRMaXN0UmVxEgwKBHBhZ2UYASABKA0SEQoJcGFnZV9zaXplGAIgASgN",
            "Eg8KB3VzZXJfaWQYAyABKAQiZAoWVHJlYXN1cmVSZWNvcmRMaXN0UmVzcBIN",
            "CgV0b3RhbBgBIAEoDRImCgRsaXN0GAIgAygLMhgudHJlYXN1cmUuVHJlYXN1",
            "cmVSZWNvcmQSEwoLc3RhdHVzX2NvZGUYAyABKA0iHgoLT3BlblRpbWVSZXES",
            "DwoHdXNlcl9pZBgBIAEoBCJMCgxPcGVuVGltZVJlc3ASEwoLc3RhdHVzX2Nv",
            "ZGUYASABKA0SDQoFc3RhcnQYAiABKA0SCwoDZW5kGAMgASgNEgsKA2N1chgE",
            "IAEoDSJ0CgpSZXdhcmRQdXNoEg8KB3VzZXJfaWQYASABKAQSEQoJdXNlcl9u",
            "YW1lGAIgASgJEhEKCXJld2FyZF9pZBgDIAEoDRIUCgxjaXJjbGVfaW5kZXgY",
            "BCABKA0SGQoRdGlja2V0X2NvbnN1bWVfaWQYBSABKAQiTwoeVXBkYXRlVHJl",
            "YXN1cmVUaWNrZXRDb25zdW1lUmVxEgoKAmlkGAEgASgEEhEKCXJld2FyZF9p",
            "ZBgCIAEoDRIOCgZyZW1hcmsYAyABKAkiNgofVXBkYXRlVHJlYXN1cmVUaWNr",
            "ZXRDb25zdW1lUmVzcBITCgtzdGF0dXNfY29kZRgBIAEoDSIxCg1CZWFjaFNo",
            "ZWxsUmVxEg8KB3VzZXJfaWQYASABKAQSDwoHdG9vbF9pZBgCIAEoDSJiCg5C",
            "ZWFjaFNoZWxsUmVzcBITCgtzdGF0dXNfY29kZRgBIAEoDRIRCglyZXdhcmRf",
            "aWQYAiABKA0SEwoLcmV3YXJkX25hbWUYAyABKAkSEwoLcmV3YXJkX2ljb24Y",
            "BCABKAkiJgoDUG9zEgkKAXgYASABKAUSCQoBeRgCIAEoBRIJCgF6GAMgASgF",
            "IoYBCgRNb3ZlEhoKA3BvcxgBIAEoCzINLnRyZWFzdXJlLlBvcxIaCgNkaXIY",
            "AiABKAsyDS50cmVhc3VyZS5Qb3MSDQoFaW5kZXgYAyABKA0SDQoFc3RhdGUY",
            "BCABKAUSFAoMZnJvbV91c2VyX2lkGAUgASgEEhIKCnRvX3VzZXJfaWQYBiAB",
            "KAQiHwoITW92ZVJlc3ASEwoLc3RhdHVzX2NvZGUYASABKA0iQgoNQ2hhbmdl",
            "U2tpblJlcRIPCgd1c2VyX2lkGAEgASgEEhEKCUF2YXRhcklkcxgCIAMoAxIN",
            "CgVpbmRleBgDIAEoDSIlCg5DaGFuZ2VTa2luUmVzcBITCgtzdGF0dXNfY29k",
            "ZRgBIAEoDSJhChNPdGhlckNoYW5nZVNraW5QdXNoEhQKDGZyb21fdXNlcl9p",
            "ZBgBIAEoBBIRCglBdmF0YXJJZHMYAiADKAMSEgoKdG9fdXNlcl9pZBgDIAEo",
            "BBINCgVpbmRleBgEIAEoDSI9CgtEb0FjdGlvblJlcRIPCgd1c2VyX2lkGAEg",
            "ASgEEg4KBmFjdGlvbhgCIAEoDRINCgVpbmRleBgDIAEoDSIjCgxEb0FjdGlv",
            "blJlc3ASEwoLc3RhdHVzX2NvZGUYASABKA0iXAoRT3RoZXJEb0FjdGlvblB1",
            "c2gSFAoMZnJvbV91c2VyX2lkGAEgASgEEg4KBmFjdGlvbhgCIAEoDRISCgp0",
            "b191c2VyX2lkGAMgASgEEg0KBWluZGV4GAQgASgNIjUKC05ldFN0YXRlUmVx",
            "Eg8KB3VzZXJfaWQYASABKAQSFQoNbmV0d29ya19zdGF0ZRgCIAEoDSIjCgxO",
            "ZXRTdGF0ZVJlc3ASEwoLc3RhdHVzX2NvZGUYASABKA0iGQoKTm90aWNlUHVz",
            "aBILCgNtc2cYASABKAkiJgoTQ2hlY2tCZWdpbkxhdW5jaFJlcRIPCgd1c2Vy",
            "X2lkGAEgASgEIkAKFENoZWNrQmVnaW5MYXVuY2hSZXNwEhMKC3N0YXR1c19j",
            "b2RlGAEgASgNEhMKC2lzX2NvbXBsZXRlGAIgASgNIikKFkJlZ2luTGF1bmNo",
            "Q29tcGxldGVSZXESDwoHdXNlcl9pZBgBIAEoBCIuChdCZWdpbkxhdW5jaENv",
            "bXBsZXRlUmVzcBITCgtzdGF0dXNfY29kZRgBIAEoDSLKAQoWVHJlYXN1cmVS",
            "ZXdhcmRDb25mRGF0YRIRCglyZXdhcmRfaWQYASABKA0SEwoLcmV3YXJkX25h",
            "bWUYAiABKAkSEwoLcmV3YXJkX3JhcmUYAyABKA0SEwoLcmV3YXJkX3R5cGUY",
            "BCABKA0SGQoRcmV3YXJkX2NvbGxlY3Rpb24YBSABKA0SEwoLcmV3YXJkX2lj",
            "b24YBiABKAkSFwoPcmV3YXJkX3F1YW50aXR5GAcgASgNEhUKDXJld2FyZF93",
            "ZWlnaHQYCCABKA0iGwoZVHJlYXN1cmVSZXdhcmRDb25mTGlzdFJlcSJhChpU",
            "cmVhc3VyZVJld2FyZENvbmZMaXN0UmVzcBIuCgRsaXN0GAEgAygLMiAudHJl",
            "YXN1cmUuVHJlYXN1cmVSZXdhcmRDb25mRGF0YRITCgtzdGF0dXNfY29kZRgC",
            "IAEoDSJnChdUcmVhc3VyZUFjdGl2aXR5RW5kUHVzaBIcCgRyb29tGAEgASgL",
            "Mg4udHJlYXN1cmUuUm9vbRINCgVzdGFydBgCIAEoDRILCgNlbmQYAyABKA0S",
            "EgoKdG9fdXNlcl9pZBgEIAEoBCI3ChdUcmVhc3VyZUJyb2Nhc3RUb0FsbFJl",
            "cRIPCgd1c2VyX2lkGAEgASgEEgsKA21zZxgCIAEoCSIvChhUcmVhc3VyZUJy",
            "b2Nhc3RUb0FsbFJlc3ASEwoLc3RhdHVzX2NvZGUYASABKA0iTwoKU2l0ZG93",
            "blJlcRIPCgdzaXRkb3duGAEgASgJEg8KB3VzZXJfaWQYAiABKAQSDQoFaW5k",
            "ZXgYAyABKA0SEAoIaXNfbGVhdmUYBCABKAgiIgoLU2l0ZG93blJlc3ASEwoL",
            "c3RhdHVzX2NvZGUYASABKA0iaQoLU2l0ZG93blB1c2gSDwoHc2l0ZG93bhgB",
            "IAEoCRIUCgxmcm9tX3VzZXJfaWQYAiABKAQSEgoKdG9fdXNlcl9pZBgDIAEo",
            "BBINCgVpbmRleBgEIAEoDRIQCghpc19sZWF2ZRgFIAEoCCJKCg1TdW1tb25C",
            "YWNrUmVxEhQKDGZyb21fdXNlcl9pZBgBIAEoBBISCgp0b191c2VyX2lkGAIg",
            "ASgEEg8KB2xhbmRfaWQYAyABKAkiJQoOU3VtbW9uQmFja1Jlc3ASEwoLc3Rh",
            "dHVzX2NvZGUYASABKA0iHwoMTGFuZFVzZXJzUmVxEg8KB2xhbmRfaWQYASAB",
            "KAkiNgoNTGFuZFVzZXJzUmVzcBITCgtzdGF0dXNfY29kZRgBIAEoDRIQCgh1",
            "c2VyX2lkcxgCIAMoBEIVWhNnYW1lL3dzYXBpL3RyZWFzdXJlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Base.WsbaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.MessageId), global::Treasure.MessageId.Parser, null, null, new[]{ typeof(global::Treasure.MessageId.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.SceneId), global::Treasure.SceneId.Parser, null, null, new[]{ typeof(global::Treasure.SceneId.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.RegisterReq), global::Treasure.RegisterReq.Parser, new[]{ "Token", "SceneId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.RegisterResp), global::Treasure.RegisterResp.Parser, new[]{ "UserId", "StatusCode", "TreasureEfficiencyTime", "TreasureEfficiencyBuff" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.KickOfflinePush), global::Treasure.KickOfflinePush.Parser, new[]{ "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.SaveUserInfoReq), global::Treasure.SaveUserInfoReq.Parser, new[]{ "UserId", "AvatarIds", "SceneId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.SaveUserInfoResp), global::Treasure.SaveUserInfoResp.Parser, new[]{ "StatusCode", "TreasureEfficiencyTime", "TreasureEfficiencyBuff" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.NetworkState), global::Treasure.NetworkState.Parser, null, null, new[]{ typeof(global::Treasure.NetworkState.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.CreateRoomReq), global::Treasure.CreateRoomReq.Parser, new[]{ "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.CreateRoomResp), global::Treasure.CreateRoomResp.Parser, new[]{ "StatusCode", "StatusMsg", "Room" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.RoomListReq), global::Treasure.RoomListReq.Parser, new[]{ "Start", "PageSize", "SceneId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.RoomUserInfo), global::Treasure.RoomUserInfo.Parser, new[]{ "UserId", "RoomId", "State", "UserName", "PicUrl", "Gender", "Code", "Age", "Constell", "AvatarIds", "Partners", "Invites", "Model", "Start", "CurPos", "PartnerLeaveTime", "NetworkState", "ToUserId", "Heartbeat", "CircleIndex", "YunxinAccid", "YunxinToken", "SceneId", "Sitdown" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.Room), global::Treasure.Room.Parser, new[]{ "RoomId", "UserList", "ChatRoomId", "ChatRoomAddr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.RoomInfoReq), global::Treasure.RoomInfoReq.Parser, new[]{ "RoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.RoomInfoResp), global::Treasure.RoomInfoResp.Parser, new[]{ "StatusCode", "RoomInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.RoomListResp), global::Treasure.RoomListResp.Parser, new[]{ "RoomList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.JoinRoomReq), global::Treasure.JoinRoomReq.Parser, new[]{ "UserId", "RoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.JoinRoomResp), global::Treasure.JoinRoomResp.Parser, new[]{ "StatusCode", "StatusMsg", "RoomId", "UserList", "ChatRoomId", "ChatRoomAddr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.LeaveRoomReq), global::Treasure.LeaveRoomReq.Parser, new[]{ "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.LeaveRoomResp), global::Treasure.LeaveRoomResp.Parser, new[]{ "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.EnterTreasureReq), global::Treasure.EnterTreasureReq.Parser, new[]{ "UserId", "FromUserId", "LandId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.EnterTreasureResp), global::Treasure.EnterTreasureResp.Parser, new[]{ "StatusCode", "RoomInfo", "YunxinToken", "YunxinAccid", "OwnerInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.OtherEnterTreasurePush), global::Treasure.OtherEnterTreasurePush.Parser, new[]{ "NewUserInfo", "ToUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.OtherLeaveTreasurePush), global::Treasure.OtherLeaveTreasurePush.Parser, new[]{ "FromUserId", "ToUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.OtherUserStatePush), global::Treasure.OtherUserStatePush.Parser, new[]{ "FromUserId", "ToUserId", "State", "Index" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.InviteFriendReq), global::Treasure.InviteFriendReq.Parser, new[]{ "FromUserId", "ToUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.InviteFriendResp), global::Treasure.InviteFriendResp.Parser, new[]{ "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.OtherInvitePush), global::Treasure.OtherInvitePush.Parser, new[]{ "FromUserInfo", "ToUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.AgreeInviteReq), global::Treasure.AgreeInviteReq.Parser, new[]{ "FromUserId", "ToUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.AgreeInviteResp), global::Treasure.AgreeInviteResp.Parser, new[]{ "StatusCode", "Room" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.RefuseInviteReq), global::Treasure.RefuseInviteReq.Parser, new[]{ "FromUserId", "ToUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.RefuseInviteResp), global::Treasure.RefuseInviteResp.Parser, new[]{ "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.RefuseInvitePush), global::Treasure.RefuseInvitePush.Parser, new[]{ "FromUserId", "ToUserId", "FromUserName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.InviteJoinTeamReq), global::Treasure.InviteJoinTeamReq.Parser, new[]{ "FromUserId", "ToUserId", "RoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.InviteJoinTeamResp), global::Treasure.InviteJoinTeamResp.Parser, new[]{ "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.OtherInviteJoinTeamPush), global::Treasure.OtherInviteJoinTeamPush.Parser, new[]{ "FromUserInfo", "ToUserId", "RoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.AgreeJoinTeamReq), global::Treasure.AgreeJoinTeamReq.Parser, new[]{ "FromUserId", "ToUserId", "RoomId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.AgreeJoinTeamResp), global::Treasure.AgreeJoinTeamResp.Parser, new[]{ "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.RefuseNearInviteReq), global::Treasure.RefuseNearInviteReq.Parser, new[]{ "FromUserId", "ToUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.RefuseNearInviteResp), global::Treasure.RefuseNearInviteResp.Parser, new[]{ "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.RefuseNearInvitePush), global::Treasure.RefuseNearInvitePush.Parser, new[]{ "FromUserId", "ToUserId", "FromUserName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.PlayerState), global::Treasure.PlayerState.Parser, null, null, new[]{ typeof(global::Treasure.PlayerState.Types.Enum) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.PlayStateReq), global::Treasure.PlayStateReq.Parser, new[]{ "UserIds", "FromUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.PlayStateResp), global::Treasure.PlayStateResp.Parser, new[]{ "List" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.TeamInfoReq), global::Treasure.TeamInfoReq.Parser, new[]{ "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.TeamInfoResp), global::Treasure.TeamInfoResp.Parser, new[]{ "List", "StatusCode", "ToUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.LeaveTeamReq), global::Treasure.LeaveTeamReq.Parser, new[]{ "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.LeaveTeamResp), global::Treasure.LeaveTeamResp.Parser, new[]{ "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.FriendStatePush), global::Treasure.FriendStatePush.Parser, new[]{ "FromUserId", "ToUserId", "State" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.ReadyTreasureReq), global::Treasure.ReadyTreasureReq.Parser, new[]{ "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.ReadyTreasureResp), global::Treasure.ReadyTreasureResp.Parser, new[]{ "StatusCode", "TestToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.ReadyTreasurePush), global::Treasure.ReadyTreasurePush.Parser, new[]{ "ToUserId", "State", "FromUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.CancelReadyTreasureReq), global::Treasure.CancelReadyTreasureReq.Parser, new[]{ "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.CancelReadyTreasureResp), global::Treasure.CancelReadyTreasureResp.Parser, new[]{ "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.CancelReadyTreasurePush), global::Treasure.CancelReadyTreasurePush.Parser, new[]{ "ToUserId", "State", "FromUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.StartTreasurePush), global::Treasure.StartTreasurePush.Parser, new[]{ "ToUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.TreasureRecord), global::Treasure.TreasureRecord.Parser, new[]{ "Id", "UserId", "UserName", "RoomId", "TeamUsers", "RewardId", "RewardName", "RewardQuantity", "RewardType", "RewardRare", "RewardCollection", "CreatedAt", "UpdatedAt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.CreateTreasureRecordReq), global::Treasure.CreateTreasureRecordReq.Parser, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.CreateTreasureRecordResp), global::Treasure.CreateTreasureRecordResp.Parser, new[]{ "Id", "StatusCode", "RewardId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.UpdateTreasureRecordReq), global::Treasure.UpdateTreasureRecordReq.Parser, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.UpdateTreasureRecordResp), global::Treasure.UpdateTreasureRecordResp.Parser, new[]{ "Id", "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.TreasureRecordListReq), global::Treasure.TreasureRecordListReq.Parser, new[]{ "Page", "PageSize", "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.TreasureRecordListResp), global::Treasure.TreasureRecordListResp.Parser, new[]{ "Total", "List", "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.OpenTimeReq), global::Treasure.OpenTimeReq.Parser, new[]{ "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.OpenTimeResp), global::Treasure.OpenTimeResp.Parser, new[]{ "StatusCode", "Start", "End", "Cur" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.RewardPush), global::Treasure.RewardPush.Parser, new[]{ "UserId", "UserName", "RewardId", "CircleIndex", "TicketConsumeId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.UpdateTreasureTicketConsumeReq), global::Treasure.UpdateTreasureTicketConsumeReq.Parser, new[]{ "Id", "RewardId", "Remark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.UpdateTreasureTicketConsumeResp), global::Treasure.UpdateTreasureTicketConsumeResp.Parser, new[]{ "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.BeachShellReq), global::Treasure.BeachShellReq.Parser, new[]{ "UserId", "ToolId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.BeachShellResp), global::Treasure.BeachShellResp.Parser, new[]{ "StatusCode", "RewardId", "RewardName", "RewardIcon" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.Pos), global::Treasure.Pos.Parser, new[]{ "X", "Y", "Z" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.Move), global::Treasure.Move.Parser, new[]{ "Pos", "Dir", "Index", "State", "FromUserId", "ToUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.MoveResp), global::Treasure.MoveResp.Parser, new[]{ "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.ChangeSkinReq), global::Treasure.ChangeSkinReq.Parser, new[]{ "UserId", "AvatarIds", "Index" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.ChangeSkinResp), global::Treasure.ChangeSkinResp.Parser, new[]{ "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.OtherChangeSkinPush), global::Treasure.OtherChangeSkinPush.Parser, new[]{ "FromUserId", "AvatarIds", "ToUserId", "Index" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.DoActionReq), global::Treasure.DoActionReq.Parser, new[]{ "UserId", "Action", "Index" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.DoActionResp), global::Treasure.DoActionResp.Parser, new[]{ "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.OtherDoActionPush), global::Treasure.OtherDoActionPush.Parser, new[]{ "FromUserId", "Action", "ToUserId", "Index" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.NetStateReq), global::Treasure.NetStateReq.Parser, new[]{ "UserId", "NetworkState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.NetStateResp), global::Treasure.NetStateResp.Parser, new[]{ "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.NoticePush), global::Treasure.NoticePush.Parser, new[]{ "Msg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.CheckBeginLaunchReq), global::Treasure.CheckBeginLaunchReq.Parser, new[]{ "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.CheckBeginLaunchResp), global::Treasure.CheckBeginLaunchResp.Parser, new[]{ "StatusCode", "IsComplete" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.BeginLaunchCompleteReq), global::Treasure.BeginLaunchCompleteReq.Parser, new[]{ "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.BeginLaunchCompleteResp), global::Treasure.BeginLaunchCompleteResp.Parser, new[]{ "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.TreasureRewardConfData), global::Treasure.TreasureRewardConfData.Parser, new[]{ "RewardId", "RewardName", "RewardRare", "RewardType", "RewardCollection", "RewardIcon", "RewardQuantity", "RewardWeight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.TreasureRewardConfListReq), global::Treasure.TreasureRewardConfListReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.TreasureRewardConfListResp), global::Treasure.TreasureRewardConfListResp.Parser, new[]{ "List", "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.TreasureActivityEndPush), global::Treasure.TreasureActivityEndPush.Parser, new[]{ "Room", "Start", "End", "ToUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.TreasureBrocastToAllReq), global::Treasure.TreasureBrocastToAllReq.Parser, new[]{ "UserId", "Msg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.TreasureBrocastToAllResp), global::Treasure.TreasureBrocastToAllResp.Parser, new[]{ "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.SitdownReq), global::Treasure.SitdownReq.Parser, new[]{ "Sitdown", "UserId", "Index", "IsLeave" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.SitdownResp), global::Treasure.SitdownResp.Parser, new[]{ "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.SitdownPush), global::Treasure.SitdownPush.Parser, new[]{ "Sitdown", "FromUserId", "ToUserId", "Index", "IsLeave" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.SummonBackReq), global::Treasure.SummonBackReq.Parser, new[]{ "FromUserId", "ToUserId", "LandId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.SummonBackResp), global::Treasure.SummonBackResp.Parser, new[]{ "StatusCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.LandUsersReq), global::Treasure.LandUsersReq.Parser, new[]{ "LandId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Treasure.LandUsersResp), global::Treasure.LandUsersResp.Parser, new[]{ "StatusCode", "UserIds" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 通用↓↓↓↓↓ 
  /// </summary>
  public sealed partial class MessageId : pb::IMessage<MessageId> {
    private static readonly pb::MessageParser<MessageId> _parser = new pb::MessageParser<MessageId>(() => new MessageId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageId(MessageId other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageId Clone() {
      return new MessageId(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageId other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the MessageId message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("None")] None = 0,
        /// <summary>
        ///心跳
        /// </summary>
        [pbr::OriginalName("Heartbeat")] Heartbeat = 1000,
        /// <summary>
        ///注册
        /// </summary>
        [pbr::OriginalName("Register")] Register = 1001,
        /// <summary>
        ///注册响应
        /// </summary>
        [pbr::OriginalName("RegisterResp")] RegisterResp = 1002,
        /// <summary>
        ///移动
        /// </summary>
        [pbr::OriginalName("Move")] Move = 1003,
        /// <summary>
        ///加入指定房间
        /// </summary>
        [pbr::OriginalName("JoinRoomReq")] JoinRoomReq = 1004,
        /// <summary>
        ///加入指定房间响应
        /// </summary>
        [pbr::OriginalName("JoinRoomResp")] JoinRoomResp = 1005,
        /// <summary>
        ///创建房间
        /// </summary>
        [pbr::OriginalName("CreateRoomReq")] CreateRoomReq = 1006,
        /// <summary>
        ///创建房间响应
        /// </summary>
        [pbr::OriginalName("CreateRoomResp")] CreateRoomResp = 1007,
        /// <summary>
        ///房间列表
        /// </summary>
        [pbr::OriginalName("RoomListReq")] RoomListReq = 1008,
        /// <summary>
        ///房间列表响应
        /// </summary>
        [pbr::OriginalName("RoomListResp")] RoomListResp = 1009,
        /// <summary>
        ///进入挖宝场景
        /// </summary>
        [pbr::OriginalName("EnterTreasureReq")] EnterTreasureReq = 1010,
        /// <summary>
        ///进入挖宝场景响应
        /// </summary>
        [pbr::OriginalName("EnterTreasureResp")] EnterTreasureResp = 1011,
        /// <summary>
        ///他人进入房间
        /// </summary>
        [pbr::OriginalName("OtherEnterTreasurePush")] OtherEnterTreasurePush = 1012,
        /// <summary>
        ///他人离开房间
        /// </summary>
        [pbr::OriginalName("OtherLeaveTreasurePush")] OtherLeaveTreasurePush = 1013,
        /// <summary>
        ///邀请好友
        /// </summary>
        [pbr::OriginalName("InviteFriendReq")] InviteFriendReq = 1014,
        /// <summary>
        ///邀请好友响应
        /// </summary>
        [pbr::OriginalName("InviteFriendResp")] InviteFriendResp = 1015,
        /// <summary>
        ///收到好友组队邀请
        /// </summary>
        [pbr::OriginalName("OtherInvitePush")] OtherInvitePush = 1016,
        /// <summary>
        ///接受邀请
        /// </summary>
        [pbr::OriginalName("AgreeInviteReq")] AgreeInviteReq = 1017,
        /// <summary>
        ///接受邀请响应
        /// </summary>
        [pbr::OriginalName("AgreeInviteResp")] AgreeInviteResp = 1018,
        /// <summary>
        ///邀请附近的人组队
        /// </summary>
        [pbr::OriginalName("InviteJoinTeamReq")] InviteJoinTeamReq = 1019,
        /// <summary>
        ///邀请附近的人组队响应
        /// </summary>
        [pbr::OriginalName("InviteJoinTeamResp")] InviteJoinTeamResp = 1020,
        /// <summary>
        ///接受附近的人组队
        /// </summary>
        [pbr::OriginalName("AgreeJoinTeamReq")] AgreeJoinTeamReq = 1021,
        /// <summary>
        ///接受附近的人组队响应
        /// </summary>
        [pbr::OriginalName("AgreeJoinTeamResp")] AgreeJoinTeamResp = 1022,
        /// <summary>
        ///收到附近的人组队邀请
        /// </summary>
        [pbr::OriginalName("OtherInviteJoinTeamPush")] OtherInviteJoinTeamPush = 1023,
        /// <summary>
        ///拒绝好友邀请
        /// </summary>
        [pbr::OriginalName("RefuseInviteReq")] RefuseInviteReq = 1024,
        /// <summary>
        ///拒绝好友邀请响应
        /// </summary>
        [pbr::OriginalName("RefuseInviteResp")] RefuseInviteResp = 1025,
        /// <summary>
        ///被好友拒绝推送
        /// </summary>
        [pbr::OriginalName("RefuseInvitePush")] RefuseInvitePush = 1026,
        /// <summary>
        ///拒绝附近的人邀请
        /// </summary>
        [pbr::OriginalName("RefuseNearInviteReq")] RefuseNearInviteReq = 1027,
        /// <summary>
        ///拒绝附近的人邀请响应
        /// </summary>
        [pbr::OriginalName("RefuseNearInviteResp")] RefuseNearInviteResp = 1028,
        /// <summary>
        ///被附近的人拒绝推送
        /// </summary>
        [pbr::OriginalName("RefuseNearInvitePush")] RefuseNearInvitePush = 1029,
        /// <summary>
        ///离开队伍请求
        /// </summary>
        [pbr::OriginalName("LeaveTeamReq")] LeaveTeamReq = 1030,
        /// <summary>
        ///离开队伍响应
        /// </summary>
        [pbr::OriginalName("LeaveTeamResp")] LeaveTeamResp = 1031,
        /// <summary>
        ///队伍更新推送
        /// </summary>
        [pbr::OriginalName("TeamUpdatePush")] TeamUpdatePush = 1032,
        /// <summary>
        ///获取队伍信息
        /// </summary>
        [pbr::OriginalName("TeamInfoReq")] TeamInfoReq = 1033,
        /// <summary>
        ///获取队伍信息响应
        /// </summary>
        [pbr::OriginalName("TeamInfoResp")] TeamInfoResp = 1034,
        /// <summary>
        ///换装请求
        /// </summary>
        [pbr::OriginalName("ChangeSkinReq")] ChangeSkinReq = 1035,
        /// <summary>
        ///换装响应
        /// </summary>
        [pbr::OriginalName("ChangeSkinResp")] ChangeSkinResp = 1036,
        /// <summary>
        ///他人换装
        /// </summary>
        [pbr::OriginalName("OtherChangeSkinPush")] OtherChangeSkinPush = 1037,
        /// <summary>
        ///做动作请求
        /// </summary>
        [pbr::OriginalName("DoActionReq")] DoActionReq = 1038,
        /// <summary>
        ///做动作响应
        /// </summary>
        [pbr::OriginalName("DoActionResp")] DoActionResp = 1039,
        /// <summary>
        ///他人做动作
        /// </summary>
        [pbr::OriginalName("OtherDoActionPush")] OtherDoActionPush = 1040,
        /// <summary>
        ///挖宝活动开启时间
        /// </summary>
        [pbr::OriginalName("OpenTimeReq")] OpenTimeReq = 1041,
        /// <summary>
        ///挖宝活动开启时间响应
        /// </summary>
        [pbr::OriginalName("OpenTimeResp")] OpenTimeResp = 1042,
        /// <summary>
        ///准备挖宝
        /// </summary>
        [pbr::OriginalName("ReadyTreasureReq")] ReadyTreasureReq = 1043,
        /// <summary>
        ///准备挖宝响应
        /// </summary>
        [pbr::OriginalName("ReadyTreasureResp")] ReadyTreasureResp = 1044,
        /// <summary>
        ///准备挖宝发送消息
        /// </summary>
        [pbr::OriginalName("ReadyTreasurePush")] ReadyTreasurePush = 1045,
        /// <summary>
        ///服务器推送队伍开始挖
        /// </summary>
        [pbr::OriginalName("StartTreasurePush")] StartTreasurePush = 1046,
        /// <summary>
        ///奖励消息推送
        /// </summary>
        [pbr::OriginalName("RewardPush")] RewardPush = 1047,
        /// <summary>
        ///全局公告
        /// </summary>
        [pbr::OriginalName("NoticePush")] NoticePush = 1048,
        /// <summary>
        ///网络状态推送
        /// </summary>
        [pbr::OriginalName("NetStatePush")] NetStatePush = 1049,
        /// <summary>
        ///挖宝记录查询
        /// </summary>
        [pbr::OriginalName("TreasureRecordListReq")] TreasureRecordListReq = 1050,
        /// <summary>
        ///挖宝记录响应
        /// </summary>
        [pbr::OriginalName("TreasureRecordListResp")] TreasureRecordListResp = 1051,
        /// <summary>
        ///查看新手引导
        /// </summary>
        [pbr::OriginalName("CheckBeginLaunchReq")] CheckBeginLaunchReq = 1052,
        /// <summary>
        ///查看新手引导响应
        /// </summary>
        [pbr::OriginalName("CheckBeginLaunchResp")] CheckBeginLaunchResp = 1053,
        /// <summary>
        ///新手引导完成
        /// </summary>
        [pbr::OriginalName("BeginLaunchCompleteReq")] BeginLaunchCompleteReq = 1054,
        /// <summary>
        ///新手引导完成响应
        /// </summary>
        [pbr::OriginalName("BeginLaunchCompleteResp")] BeginLaunchCompleteResp = 1055,
        /// <summary>
        ///奖励预览
        /// </summary>
        [pbr::OriginalName("TreasureRewardConfListReq")] TreasureRewardConfListReq = 1056,
        /// <summary>
        ///奖励预览响应
        /// </summary>
        [pbr::OriginalName("TreasureRewardConfListResp")] TreasureRewardConfListResp = 1057,
        /// <summary>
        ///房间其他人状态同步
        /// </summary>
        [pbr::OriginalName("OtherUserStatePush")] OtherUserStatePush = 1058,
        /// <summary>
        ///被踢下线
        /// </summary>
        [pbr::OriginalName("KickOfflinePush")] KickOfflinePush = 1059,
        /// <summary>
        ///本次挖宝活动结束
        /// </summary>
        [pbr::OriginalName("TreasureActivityEndPush")] TreasureActivityEndPush = 1060,
        /// <summary>
        ///好友状态变化推送
        /// </summary>
        [pbr::OriginalName("FriendStatePush")] FriendStatePush = 1061,
        /// <summary>
        ///取消准备
        /// </summary>
        [pbr::OriginalName("CancelReadyTreasureReq")] CancelReadyTreasureReq = 1062,
        /// <summary>
        ///取消准备响应
        /// </summary>
        [pbr::OriginalName("CancelReadyTreasureResp")] CancelReadyTreasureResp = 1063,
        /// <summary>
        ///取消准备推送
        /// </summary>
        [pbr::OriginalName("CancelReadyTreasurePush")] CancelReadyTreasurePush = 1064,
        /// <summary>
        ///房间详情
        /// </summary>
        [pbr::OriginalName("RoomInfoReq")] RoomInfoReq = 1065,
        /// <summary>
        ///房间详情响应
        /// </summary>
        [pbr::OriginalName("RoomInfoResp")] RoomInfoResp = 1066,
        /// <summary>
        ///向挖宝发世界消息
        /// </summary>
        [pbr::OriginalName("TreasureBrocastToAllReq")] TreasureBrocastToAllReq = 1067,
        /// <summary>
        ///向挖宝发世界消息响应
        /// </summary>
        [pbr::OriginalName("TreasureBrocastToAllResp")] TreasureBrocastToAllResp = 1068,
        /// <summary>
        ///坐下
        /// </summary>
        [pbr::OriginalName("SitdownReq")] SitdownReq = 1069,
        /// <summary>
        ///坐下响应
        /// </summary>
        [pbr::OriginalName("SitdownResp")] SitdownResp = 1070,
        /// <summary>
        ///坐下推送
        /// </summary>
        [pbr::OriginalName("SitdownPush")] SitdownPush = 1071,
        /// <summary>
        ///邀请上线
        /// </summary>
        [pbr::OriginalName("SummonBackReq")] SummonBackReq = 1072,
        /// <summary>
        ///邀请上线响应
        /// </summary>
        [pbr::OriginalName("SummonBackResp")] SummonBackResp = 1073,
        /// <summary>
        ///离开当前场景
        /// </summary>
        [pbr::OriginalName("LeaveRoomReq")] LeaveRoomReq = 1074,
        /// <summary>
        ///离开当前场景响应
        /// </summary>
        [pbr::OriginalName("LeaveRoomResp")] LeaveRoomResp = 1075,
        /// <summary>
        ///沙滩挖贝壳请求
        /// </summary>
        [pbr::OriginalName("BeachShellReq")] BeachShellReq = 1076,
        /// <summary>
        ///沙滩挖贝壳响应
        /// </summary>
        [pbr::OriginalName("BeachShellResp")] BeachShellResp = 1077,
      }

    }
    #endregion

  }

  /// <summary>
  /// 场景id
  /// </summary>
  public sealed partial class SceneId : pb::IMessage<SceneId> {
    private static readonly pb::MessageParser<SceneId> _parser = new pb::MessageParser<SceneId>(() => new SceneId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SceneId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneId(SceneId other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneId Clone() {
      return new SceneId(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SceneId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SceneId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SceneId other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SceneId message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("None")] None = 0,
        /// <summary>
        ///客厅
        /// </summary>
        [pbr::OriginalName("ParlorScene")] ParlorScene = 1,
        /// <summary>
        ///狗窝
        /// </summary>
        [pbr::OriginalName("DogScene")] DogScene = 2,
        /// <summary>
        ///救助站
        /// </summary>
        [pbr::OriginalName("ShelterScene")] ShelterScene = 3,
        /// <summary>
        ///寻宝
        /// </summary>
        [pbr::OriginalName("TreasureDigging")] TreasureDigging = 4,
        /// <summary>
        ///卧室
        /// </summary>
        [pbr::OriginalName("Bedroom")] Bedroom = 5,
        /// <summary>
        ///彩虹沙滩
        /// </summary>
        [pbr::OriginalName("RainbowBeach")] RainbowBeach = 6,
      }

    }
    #endregion

  }

  public sealed partial class RegisterReq : pb::IMessage<RegisterReq> {
    private static readonly pb::MessageParser<RegisterReq> _parser = new pb::MessageParser<RegisterReq>(() => new RegisterReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterReq(RegisterReq other) : this() {
      token_ = other.token_;
      sceneId_ = other.sceneId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterReq Clone() {
      return new RegisterReq(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scene_id" field.</summary>
    public const int SceneIdFieldNumber = 2;
    private uint sceneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (SceneId != other.SceneId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (SceneId != 0) hash ^= SceneId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (SceneId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SceneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (SceneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SceneId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterReq other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.SceneId != 0) {
        SceneId = other.SceneId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 16: {
            SceneId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegisterResp : pb::IMessage<RegisterResp> {
    private static readonly pb::MessageParser<RegisterResp> _parser = new pb::MessageParser<RegisterResp>(() => new RegisterResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResp(RegisterResp other) : this() {
      userId_ = other.userId_;
      statusCode_ = other.statusCode_;
      treasureEfficiencyTime_ = other.treasureEfficiencyTime_;
      treasureEfficiencyBuff_ = other.treasureEfficiencyBuff_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResp Clone() {
      return new RegisterResp(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 2;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "treasure_efficiency_time" field.</summary>
    public const int TreasureEfficiencyTimeFieldNumber = 3;
    private uint treasureEfficiencyTime_;
    /// <summary>
    /// 单人挖宝时长(s)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TreasureEfficiencyTime {
      get { return treasureEfficiencyTime_; }
      set {
        treasureEfficiencyTime_ = value;
      }
    }

    /// <summary>Field number for the "treasure_efficiency_buff" field.</summary>
    public const int TreasureEfficiencyBuffFieldNumber = 4;
    private uint treasureEfficiencyBuff_;
    /// <summary>
    /// 组队buff加成
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TreasureEfficiencyBuff {
      get { return treasureEfficiencyBuff_; }
      set {
        treasureEfficiencyBuff_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (StatusCode != other.StatusCode) return false;
      if (TreasureEfficiencyTime != other.TreasureEfficiencyTime) return false;
      if (TreasureEfficiencyBuff != other.TreasureEfficiencyBuff) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (TreasureEfficiencyTime != 0) hash ^= TreasureEfficiencyTime.GetHashCode();
      if (TreasureEfficiencyBuff != 0) hash ^= TreasureEfficiencyBuff.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (StatusCode != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(StatusCode);
      }
      if (TreasureEfficiencyTime != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(TreasureEfficiencyTime);
      }
      if (TreasureEfficiencyBuff != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(TreasureEfficiencyBuff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (TreasureEfficiencyTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TreasureEfficiencyTime);
      }
      if (TreasureEfficiencyBuff != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TreasureEfficiencyBuff);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterResp other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.TreasureEfficiencyTime != 0) {
        TreasureEfficiencyTime = other.TreasureEfficiencyTime;
      }
      if (other.TreasureEfficiencyBuff != 0) {
        TreasureEfficiencyBuff = other.TreasureEfficiencyBuff;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
          case 16: {
            StatusCode = input.ReadUInt32();
            break;
          }
          case 24: {
            TreasureEfficiencyTime = input.ReadUInt32();
            break;
          }
          case 32: {
            TreasureEfficiencyBuff = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KickOfflinePush : pb::IMessage<KickOfflinePush> {
    private static readonly pb::MessageParser<KickOfflinePush> _parser = new pb::MessageParser<KickOfflinePush>(() => new KickOfflinePush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KickOfflinePush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickOfflinePush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickOfflinePush(KickOfflinePush other) : this() {
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickOfflinePush Clone() {
      return new KickOfflinePush(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KickOfflinePush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KickOfflinePush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KickOfflinePush other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SaveUserInfoReq : pb::IMessage<SaveUserInfoReq> {
    private static readonly pb::MessageParser<SaveUserInfoReq> _parser = new pb::MessageParser<SaveUserInfoReq>(() => new SaveUserInfoReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveUserInfoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveUserInfoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveUserInfoReq(SaveUserInfoReq other) : this() {
      userId_ = other.userId_;
      avatarIds_ = other.avatarIds_.Clone();
      sceneId_ = other.sceneId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveUserInfoReq Clone() {
      return new SaveUserInfoReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "AvatarIds" field.</summary>
    public const int AvatarIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_avatarIds_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> avatarIds_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> AvatarIds {
      get { return avatarIds_; }
    }

    /// <summary>Field number for the "scene_id" field.</summary>
    public const int SceneIdFieldNumber = 3;
    private uint sceneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveUserInfoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveUserInfoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if(!avatarIds_.Equals(other.avatarIds_)) return false;
      if (SceneId != other.SceneId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      hash ^= avatarIds_.GetHashCode();
      if (SceneId != 0) hash ^= SceneId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      avatarIds_.WriteTo(output, _repeated_avatarIds_codec);
      if (SceneId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SceneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      size += avatarIds_.CalculateSize(_repeated_avatarIds_codec);
      if (SceneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SceneId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveUserInfoReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      avatarIds_.Add(other.avatarIds_);
      if (other.SceneId != 0) {
        SceneId = other.SceneId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
          case 18:
          case 16: {
            avatarIds_.AddEntriesFrom(input, _repeated_avatarIds_codec);
            break;
          }
          case 24: {
            SceneId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SaveUserInfoResp : pb::IMessage<SaveUserInfoResp> {
    private static readonly pb::MessageParser<SaveUserInfoResp> _parser = new pb::MessageParser<SaveUserInfoResp>(() => new SaveUserInfoResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveUserInfoResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveUserInfoResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveUserInfoResp(SaveUserInfoResp other) : this() {
      statusCode_ = other.statusCode_;
      treasureEfficiencyTime_ = other.treasureEfficiencyTime_;
      treasureEfficiencyBuff_ = other.treasureEfficiencyBuff_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveUserInfoResp Clone() {
      return new SaveUserInfoResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "treasure_efficiency_time" field.</summary>
    public const int TreasureEfficiencyTimeFieldNumber = 2;
    private uint treasureEfficiencyTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TreasureEfficiencyTime {
      get { return treasureEfficiencyTime_; }
      set {
        treasureEfficiencyTime_ = value;
      }
    }

    /// <summary>Field number for the "treasure_efficiency_buff" field.</summary>
    public const int TreasureEfficiencyBuffFieldNumber = 3;
    private uint treasureEfficiencyBuff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TreasureEfficiencyBuff {
      get { return treasureEfficiencyBuff_; }
      set {
        treasureEfficiencyBuff_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveUserInfoResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveUserInfoResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      if (TreasureEfficiencyTime != other.TreasureEfficiencyTime) return false;
      if (TreasureEfficiencyBuff != other.TreasureEfficiencyBuff) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (TreasureEfficiencyTime != 0) hash ^= TreasureEfficiencyTime.GetHashCode();
      if (TreasureEfficiencyBuff != 0) hash ^= TreasureEfficiencyBuff.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (TreasureEfficiencyTime != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TreasureEfficiencyTime);
      }
      if (TreasureEfficiencyBuff != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(TreasureEfficiencyBuff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (TreasureEfficiencyTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TreasureEfficiencyTime);
      }
      if (TreasureEfficiencyBuff != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TreasureEfficiencyBuff);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveUserInfoResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.TreasureEfficiencyTime != 0) {
        TreasureEfficiencyTime = other.TreasureEfficiencyTime;
      }
      if (other.TreasureEfficiencyBuff != 0) {
        TreasureEfficiencyBuff = other.TreasureEfficiencyBuff;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
          case 16: {
            TreasureEfficiencyTime = input.ReadUInt32();
            break;
          }
          case 24: {
            TreasureEfficiencyBuff = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetworkState : pb::IMessage<NetworkState> {
    private static readonly pb::MessageParser<NetworkState> _parser = new pb::MessageParser<NetworkState>(() => new NetworkState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkState(NetworkState other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkState Clone() {
      return new NetworkState(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkState other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the NetworkState message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("None")] None = 0,
        /// <summary>
        ///在线
        /// </summary>
        [pbr::OriginalName("Online")] Online = 1,
        /// <summary>
        ///离线
        /// </summary>
        [pbr::OriginalName("Offline")] Offline = 2,
        /// <summary>
        ///重连中
        /// </summary>
        [pbr::OriginalName("Reconnecting")] Reconnecting = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// 玩家主动创建房间
  /// </summary>
  public sealed partial class CreateRoomReq : pb::IMessage<CreateRoomReq> {
    private static readonly pb::MessageParser<CreateRoomReq> _parser = new pb::MessageParser<CreateRoomReq>(() => new CreateRoomReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRoomReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomReq(CreateRoomReq other) : this() {
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomReq Clone() {
      return new CreateRoomReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRoomReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRoomReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRoomReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateRoomResp : pb::IMessage<CreateRoomResp> {
    private static readonly pb::MessageParser<CreateRoomResp> _parser = new pb::MessageParser<CreateRoomResp>(() => new CreateRoomResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRoomResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomResp(CreateRoomResp other) : this() {
      statusCode_ = other.statusCode_;
      statusMsg_ = other.statusMsg_;
      room_ = other.room_ != null ? other.room_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomResp Clone() {
      return new CreateRoomResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "status_msg" field.</summary>
    public const int StatusMsgFieldNumber = 2;
    private string statusMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusMsg {
      get { return statusMsg_; }
      set {
        statusMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room" field.</summary>
    public const int RoomFieldNumber = 3;
    private global::Treasure.Room room_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Treasure.Room Room {
      get { return room_; }
      set {
        room_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRoomResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRoomResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      if (StatusMsg != other.StatusMsg) return false;
      if (!object.Equals(Room, other.Room)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (StatusMsg.Length != 0) hash ^= StatusMsg.GetHashCode();
      if (room_ != null) hash ^= Room.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (StatusMsg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StatusMsg);
      }
      if (room_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Room);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (StatusMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusMsg);
      }
      if (room_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Room);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRoomResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.StatusMsg.Length != 0) {
        StatusMsg = other.StatusMsg;
      }
      if (other.room_ != null) {
        if (room_ == null) {
          Room = new global::Treasure.Room();
        }
        Room.MergeFrom(other.Room);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
          case 18: {
            StatusMsg = input.ReadString();
            break;
          }
          case 26: {
            if (room_ == null) {
              Room = new global::Treasure.Room();
            }
            input.ReadMessage(Room);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 房间列表
  /// </summary>
  public sealed partial class RoomListReq : pb::IMessage<RoomListReq> {
    private static readonly pb::MessageParser<RoomListReq> _parser = new pb::MessageParser<RoomListReq>(() => new RoomListReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomListReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListReq(RoomListReq other) : this() {
      start_ = other.start_;
      pageSize_ = other.pageSize_;
      sceneId_ = other.sceneId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListReq Clone() {
      return new RoomListReq(this);
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 1;
    private uint start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private uint pageSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "scene_id" field.</summary>
    public const int SceneIdFieldNumber = 3;
    private uint sceneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomListReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Start != other.Start) return false;
      if (PageSize != other.PageSize) return false;
      if (SceneId != other.SceneId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Start != 0) hash ^= Start.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (SceneId != 0) hash ^= SceneId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Start != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Start);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PageSize);
      }
      if (SceneId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SceneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Start != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Start);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PageSize);
      }
      if (SceneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SceneId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomListReq other) {
      if (other == null) {
        return;
      }
      if (other.Start != 0) {
        Start = other.Start;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.SceneId != 0) {
        SceneId = other.SceneId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Start = input.ReadUInt32();
            break;
          }
          case 16: {
            PageSize = input.ReadUInt32();
            break;
          }
          case 24: {
            SceneId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 房间里玩家详情
  /// </summary>
  public sealed partial class RoomUserInfo : pb::IMessage<RoomUserInfo> {
    private static readonly pb::MessageParser<RoomUserInfo> _parser = new pb::MessageParser<RoomUserInfo>(() => new RoomUserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomUserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomUserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomUserInfo(RoomUserInfo other) : this() {
      userId_ = other.userId_;
      roomId_ = other.roomId_;
      state_ = other.state_;
      userName_ = other.userName_;
      picUrl_ = other.picUrl_;
      gender_ = other.gender_;
      code_ = other.code_;
      age_ = other.age_;
      constell_ = other.constell_;
      avatarIds_ = other.avatarIds_.Clone();
      partners_ = other.partners_.Clone();
      invites_ = other.invites_.Clone();
      model_ = other.model_;
      start_ = other.start_;
      curPos_ = other.curPos_ != null ? other.curPos_.Clone() : null;
      partnerLeaveTime_ = other.partnerLeaveTime_;
      networkState_ = other.networkState_;
      toUserId_ = other.toUserId_;
      heartbeat_ = other.heartbeat_;
      circleIndex_ = other.circleIndex_;
      yunxinAccid_ = other.yunxinAccid_;
      yunxinToken_ = other.yunxinToken_;
      sceneId_ = other.sceneId_;
      sitdown_ = other.sitdown_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomUserInfo Clone() {
      return new RoomUserInfo(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 2;
    private uint roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private uint state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 4;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pic_url" field.</summary>
    public const int PicUrlFieldNumber = 5;
    private string picUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PicUrl {
      get { return picUrl_; }
      set {
        picUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 6;
    private string gender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gender {
      get { return gender_; }
      set {
        gender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 7;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "age" field.</summary>
    public const int AgeFieldNumber = 8;
    private string age_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Age {
      get { return age_; }
      set {
        age_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "constell" field.</summary>
    public const int ConstellFieldNumber = 9;
    private string constell_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Constell {
      get { return constell_; }
      set {
        constell_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatar_ids" field.</summary>
    public const int AvatarIdsFieldNumber = 10;
    private static readonly pb::FieldCodec<long> _repeated_avatarIds_codec
        = pb::FieldCodec.ForInt64(82);
    private readonly pbc::RepeatedField<long> avatarIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///服装
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> AvatarIds {
      get { return avatarIds_; }
    }

    /// <summary>Field number for the "partners" field.</summary>
    public const int PartnersFieldNumber = 11;
    private static readonly pb::FieldCodec<ulong> _repeated_partners_codec
        = pb::FieldCodec.ForUInt64(90);
    private readonly pbc::RepeatedField<ulong> partners_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    ///队友列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> Partners {
      get { return partners_; }
    }

    /// <summary>Field number for the "invites" field.</summary>
    public const int InvitesFieldNumber = 12;
    private static readonly pb::FieldCodec<ulong> _repeated_invites_codec
        = pb::FieldCodec.ForUInt64(98);
    private readonly pbc::RepeatedField<ulong> invites_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    ///邀请者列表(都有谁邀请了我)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> Invites {
      get { return invites_; }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 13;
    private uint model_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Model {
      get { return model_; }
      set {
        model_ = value;
      }
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 14;
    private uint start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "cur_pos" field.</summary>
    public const int CurPosFieldNumber = 15;
    private global::Treasure.Move curPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Treasure.Move CurPos {
      get { return curPos_; }
      set {
        curPos_ = value;
      }
    }

    /// <summary>Field number for the "partner_leave_time" field.</summary>
    public const int PartnerLeaveTimeFieldNumber = 16;
    private uint partnerLeaveTime_;
    /// <summary>
    ///队友离队时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PartnerLeaveTime {
      get { return partnerLeaveTime_; }
      set {
        partnerLeaveTime_ = value;
      }
    }

    /// <summary>Field number for the "network_state" field.</summary>
    public const int NetworkStateFieldNumber = 17;
    private uint networkState_;
    /// <summary>
    ///网络状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NetworkState {
      get { return networkState_; }
      set {
        networkState_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 18;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "heartbeat" field.</summary>
    public const int HeartbeatFieldNumber = 19;
    private uint heartbeat_;
    /// <summary>
    ///上次心跳时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Heartbeat {
      get { return heartbeat_; }
      set {
        heartbeat_ = value;
      }
    }

    /// <summary>Field number for the "circle_index" field.</summary>
    public const int CircleIndexFieldNumber = 20;
    private uint circleIndex_;
    /// <summary>
    ///圈位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CircleIndex {
      get { return circleIndex_; }
      set {
        circleIndex_ = value;
      }
    }

    /// <summary>Field number for the "yunxin_accid" field.</summary>
    public const int YunxinAccidFieldNumber = 21;
    private string yunxinAccid_ = "";
    /// <summary>
    ///云信accid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string YunxinAccid {
      get { return yunxinAccid_; }
      set {
        yunxinAccid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "yunxin_token" field.</summary>
    public const int YunxinTokenFieldNumber = 22;
    private string yunxinToken_ = "";
    /// <summary>
    ///云信token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string YunxinToken {
      get { return yunxinToken_; }
      set {
        yunxinToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scene_id" field.</summary>
    public const int SceneIdFieldNumber = 23;
    private uint sceneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    /// <summary>Field number for the "sitdown" field.</summary>
    public const int SitdownFieldNumber = 24;
    private string sitdown_ = "";
    /// <summary>
    ///用于记录坐在沙发上, 客户端可自定义内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sitdown {
      get { return sitdown_; }
      set {
        sitdown_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomUserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomUserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (RoomId != other.RoomId) return false;
      if (State != other.State) return false;
      if (UserName != other.UserName) return false;
      if (PicUrl != other.PicUrl) return false;
      if (Gender != other.Gender) return false;
      if (Code != other.Code) return false;
      if (Age != other.Age) return false;
      if (Constell != other.Constell) return false;
      if(!avatarIds_.Equals(other.avatarIds_)) return false;
      if(!partners_.Equals(other.partners_)) return false;
      if(!invites_.Equals(other.invites_)) return false;
      if (Model != other.Model) return false;
      if (Start != other.Start) return false;
      if (!object.Equals(CurPos, other.CurPos)) return false;
      if (PartnerLeaveTime != other.PartnerLeaveTime) return false;
      if (NetworkState != other.NetworkState) return false;
      if (ToUserId != other.ToUserId) return false;
      if (Heartbeat != other.Heartbeat) return false;
      if (CircleIndex != other.CircleIndex) return false;
      if (YunxinAccid != other.YunxinAccid) return false;
      if (YunxinToken != other.YunxinToken) return false;
      if (SceneId != other.SceneId) return false;
      if (Sitdown != other.Sitdown) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (PicUrl.Length != 0) hash ^= PicUrl.GetHashCode();
      if (Gender.Length != 0) hash ^= Gender.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Age.Length != 0) hash ^= Age.GetHashCode();
      if (Constell.Length != 0) hash ^= Constell.GetHashCode();
      hash ^= avatarIds_.GetHashCode();
      hash ^= partners_.GetHashCode();
      hash ^= invites_.GetHashCode();
      if (Model != 0) hash ^= Model.GetHashCode();
      if (Start != 0) hash ^= Start.GetHashCode();
      if (curPos_ != null) hash ^= CurPos.GetHashCode();
      if (PartnerLeaveTime != 0) hash ^= PartnerLeaveTime.GetHashCode();
      if (NetworkState != 0) hash ^= NetworkState.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (Heartbeat != 0) hash ^= Heartbeat.GetHashCode();
      if (CircleIndex != 0) hash ^= CircleIndex.GetHashCode();
      if (YunxinAccid.Length != 0) hash ^= YunxinAccid.GetHashCode();
      if (YunxinToken.Length != 0) hash ^= YunxinToken.GetHashCode();
      if (SceneId != 0) hash ^= SceneId.GetHashCode();
      if (Sitdown.Length != 0) hash ^= Sitdown.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (RoomId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(RoomId);
      }
      if (State != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(State);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UserName);
      }
      if (PicUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PicUrl);
      }
      if (Gender.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Gender);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Code);
      }
      if (Age.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Age);
      }
      if (Constell.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Constell);
      }
      avatarIds_.WriteTo(output, _repeated_avatarIds_codec);
      partners_.WriteTo(output, _repeated_partners_codec);
      invites_.WriteTo(output, _repeated_invites_codec);
      if (Model != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Model);
      }
      if (Start != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Start);
      }
      if (curPos_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(CurPos);
      }
      if (PartnerLeaveTime != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(PartnerLeaveTime);
      }
      if (NetworkState != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(NetworkState);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(144, 1);
        output.WriteUInt64(ToUserId);
      }
      if (Heartbeat != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(Heartbeat);
      }
      if (CircleIndex != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(CircleIndex);
      }
      if (YunxinAccid.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(YunxinAccid);
      }
      if (YunxinToken.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(YunxinToken);
      }
      if (SceneId != 0) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(SceneId);
      }
      if (Sitdown.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(Sitdown);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoomId);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(State);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (PicUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PicUrl);
      }
      if (Gender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gender);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Age.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Age);
      }
      if (Constell.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Constell);
      }
      size += avatarIds_.CalculateSize(_repeated_avatarIds_codec);
      size += partners_.CalculateSize(_repeated_partners_codec);
      size += invites_.CalculateSize(_repeated_invites_codec);
      if (Model != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Model);
      }
      if (Start != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Start);
      }
      if (curPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurPos);
      }
      if (PartnerLeaveTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PartnerLeaveTime);
      }
      if (NetworkState != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(NetworkState);
      }
      if (ToUserId != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (Heartbeat != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Heartbeat);
      }
      if (CircleIndex != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CircleIndex);
      }
      if (YunxinAccid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(YunxinAccid);
      }
      if (YunxinToken.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(YunxinToken);
      }
      if (SceneId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SceneId);
      }
      if (Sitdown.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Sitdown);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomUserInfo other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.PicUrl.Length != 0) {
        PicUrl = other.PicUrl;
      }
      if (other.Gender.Length != 0) {
        Gender = other.Gender;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Age.Length != 0) {
        Age = other.Age;
      }
      if (other.Constell.Length != 0) {
        Constell = other.Constell;
      }
      avatarIds_.Add(other.avatarIds_);
      partners_.Add(other.partners_);
      invites_.Add(other.invites_);
      if (other.Model != 0) {
        Model = other.Model;
      }
      if (other.Start != 0) {
        Start = other.Start;
      }
      if (other.curPos_ != null) {
        if (curPos_ == null) {
          CurPos = new global::Treasure.Move();
        }
        CurPos.MergeFrom(other.CurPos);
      }
      if (other.PartnerLeaveTime != 0) {
        PartnerLeaveTime = other.PartnerLeaveTime;
      }
      if (other.NetworkState != 0) {
        NetworkState = other.NetworkState;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.Heartbeat != 0) {
        Heartbeat = other.Heartbeat;
      }
      if (other.CircleIndex != 0) {
        CircleIndex = other.CircleIndex;
      }
      if (other.YunxinAccid.Length != 0) {
        YunxinAccid = other.YunxinAccid;
      }
      if (other.YunxinToken.Length != 0) {
        YunxinToken = other.YunxinToken;
      }
      if (other.SceneId != 0) {
        SceneId = other.SceneId;
      }
      if (other.Sitdown.Length != 0) {
        Sitdown = other.Sitdown;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
          case 16: {
            RoomId = input.ReadUInt32();
            break;
          }
          case 24: {
            State = input.ReadUInt32();
            break;
          }
          case 34: {
            UserName = input.ReadString();
            break;
          }
          case 42: {
            PicUrl = input.ReadString();
            break;
          }
          case 50: {
            Gender = input.ReadString();
            break;
          }
          case 58: {
            Code = input.ReadString();
            break;
          }
          case 66: {
            Age = input.ReadString();
            break;
          }
          case 74: {
            Constell = input.ReadString();
            break;
          }
          case 82:
          case 80: {
            avatarIds_.AddEntriesFrom(input, _repeated_avatarIds_codec);
            break;
          }
          case 90:
          case 88: {
            partners_.AddEntriesFrom(input, _repeated_partners_codec);
            break;
          }
          case 98:
          case 96: {
            invites_.AddEntriesFrom(input, _repeated_invites_codec);
            break;
          }
          case 104: {
            Model = input.ReadUInt32();
            break;
          }
          case 112: {
            Start = input.ReadUInt32();
            break;
          }
          case 122: {
            if (curPos_ == null) {
              CurPos = new global::Treasure.Move();
            }
            input.ReadMessage(CurPos);
            break;
          }
          case 128: {
            PartnerLeaveTime = input.ReadUInt32();
            break;
          }
          case 136: {
            NetworkState = input.ReadUInt32();
            break;
          }
          case 144: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 152: {
            Heartbeat = input.ReadUInt32();
            break;
          }
          case 160: {
            CircleIndex = input.ReadUInt32();
            break;
          }
          case 170: {
            YunxinAccid = input.ReadString();
            break;
          }
          case 178: {
            YunxinToken = input.ReadString();
            break;
          }
          case 184: {
            SceneId = input.ReadUInt32();
            break;
          }
          case 194: {
            Sitdown = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Room : pb::IMessage<Room> {
    private static readonly pb::MessageParser<Room> _parser = new pb::MessageParser<Room>(() => new Room());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Room> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Room() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Room(Room other) : this() {
      roomId_ = other.roomId_;
      userList_ = other.userList_.Clone();
      chatRoomId_ = other.chatRoomId_;
      chatRoomAddr_ = other.chatRoomAddr_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Room Clone() {
      return new Room(this);
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private uint roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "user_list" field.</summary>
    public const int UserListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Treasure.RoomUserInfo> _repeated_userList_codec
        = pb::FieldCodec.ForMessage(18, global::Treasure.RoomUserInfo.Parser);
    private readonly pbc::RepeatedField<global::Treasure.RoomUserInfo> userList_ = new pbc::RepeatedField<global::Treasure.RoomUserInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Treasure.RoomUserInfo> UserList {
      get { return userList_; }
    }

    /// <summary>Field number for the "chat_room_id" field.</summary>
    public const int ChatRoomIdFieldNumber = 3;
    private ulong chatRoomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ChatRoomId {
      get { return chatRoomId_; }
      set {
        chatRoomId_ = value;
      }
    }

    /// <summary>Field number for the "chat_room_addr" field.</summary>
    public const int ChatRoomAddrFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_chatRoomAddr_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> chatRoomAddr_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ChatRoomAddr {
      get { return chatRoomAddr_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Room);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Room other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if(!userList_.Equals(other.userList_)) return false;
      if (ChatRoomId != other.ChatRoomId) return false;
      if(!chatRoomAddr_.Equals(other.chatRoomAddr_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      hash ^= userList_.GetHashCode();
      if (ChatRoomId != 0UL) hash ^= ChatRoomId.GetHashCode();
      hash ^= chatRoomAddr_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RoomId);
      }
      userList_.WriteTo(output, _repeated_userList_codec);
      if (ChatRoomId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ChatRoomId);
      }
      chatRoomAddr_.WriteTo(output, _repeated_chatRoomAddr_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoomId);
      }
      size += userList_.CalculateSize(_repeated_userList_codec);
      if (ChatRoomId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ChatRoomId);
      }
      size += chatRoomAddr_.CalculateSize(_repeated_chatRoomAddr_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Room other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      userList_.Add(other.userList_);
      if (other.ChatRoomId != 0UL) {
        ChatRoomId = other.ChatRoomId;
      }
      chatRoomAddr_.Add(other.chatRoomAddr_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadUInt32();
            break;
          }
          case 18: {
            userList_.AddEntriesFrom(input, _repeated_userList_codec);
            break;
          }
          case 24: {
            ChatRoomId = input.ReadUInt64();
            break;
          }
          case 34: {
            chatRoomAddr_.AddEntriesFrom(input, _repeated_chatRoomAddr_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomInfoReq : pb::IMessage<RoomInfoReq> {
    private static readonly pb::MessageParser<RoomInfoReq> _parser = new pb::MessageParser<RoomInfoReq>(() => new RoomInfoReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomInfoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfoReq(RoomInfoReq other) : this() {
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfoReq Clone() {
      return new RoomInfoReq(this);
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private uint roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomInfoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomInfoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomInfoReq other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomInfoResp : pb::IMessage<RoomInfoResp> {
    private static readonly pb::MessageParser<RoomInfoResp> _parser = new pb::MessageParser<RoomInfoResp>(() => new RoomInfoResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomInfoResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfoResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfoResp(RoomInfoResp other) : this() {
      statusCode_ = other.statusCode_;
      roomInfo_ = other.roomInfo_ != null ? other.roomInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfoResp Clone() {
      return new RoomInfoResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "room_info" field.</summary>
    public const int RoomInfoFieldNumber = 2;
    private global::Treasure.Room roomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Treasure.Room RoomInfo {
      get { return roomInfo_; }
      set {
        roomInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomInfoResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomInfoResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      if (!object.Equals(RoomInfo, other.RoomInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (roomInfo_ != null) hash ^= RoomInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (roomInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RoomInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (roomInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomInfoResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.roomInfo_ != null) {
        if (roomInfo_ == null) {
          RoomInfo = new global::Treasure.Room();
        }
        RoomInfo.MergeFrom(other.RoomInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
          case 18: {
            if (roomInfo_ == null) {
              RoomInfo = new global::Treasure.Room();
            }
            input.ReadMessage(RoomInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomListResp : pb::IMessage<RoomListResp> {
    private static readonly pb::MessageParser<RoomListResp> _parser = new pb::MessageParser<RoomListResp>(() => new RoomListResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomListResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListResp(RoomListResp other) : this() {
      roomList_ = other.roomList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListResp Clone() {
      return new RoomListResp(this);
    }

    /// <summary>Field number for the "room_list" field.</summary>
    public const int RoomListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Treasure.Room> _repeated_roomList_codec
        = pb::FieldCodec.ForMessage(10, global::Treasure.Room.Parser);
    private readonly pbc::RepeatedField<global::Treasure.Room> roomList_ = new pbc::RepeatedField<global::Treasure.Room>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Treasure.Room> RoomList {
      get { return roomList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomListResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomListResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roomList_.Equals(other.roomList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roomList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      roomList_.WriteTo(output, _repeated_roomList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += roomList_.CalculateSize(_repeated_roomList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomListResp other) {
      if (other == null) {
        return;
      }
      roomList_.Add(other.roomList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            roomList_.AddEntriesFrom(input, _repeated_roomList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 加入指定房间房间
  /// </summary>
  public sealed partial class JoinRoomReq : pb::IMessage<JoinRoomReq> {
    private static readonly pb::MessageParser<JoinRoomReq> _parser = new pb::MessageParser<JoinRoomReq>(() => new JoinRoomReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomReq(JoinRoomReq other) : this() {
      userId_ = other.userId_;
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomReq Clone() {
      return new JoinRoomReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 2;
    private uint roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (RoomId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
          case 16: {
            RoomId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinRoomResp : pb::IMessage<JoinRoomResp> {
    private static readonly pb::MessageParser<JoinRoomResp> _parser = new pb::MessageParser<JoinRoomResp>(() => new JoinRoomResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomResp(JoinRoomResp other) : this() {
      statusCode_ = other.statusCode_;
      statusMsg_ = other.statusMsg_;
      roomId_ = other.roomId_;
      userList_ = other.userList_.Clone();
      chatRoomId_ = other.chatRoomId_;
      chatRoomAddr_ = other.chatRoomAddr_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomResp Clone() {
      return new JoinRoomResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "status_msg" field.</summary>
    public const int StatusMsgFieldNumber = 2;
    private string statusMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusMsg {
      get { return statusMsg_; }
      set {
        statusMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 3;
    private uint roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "user_list" field.</summary>
    public const int UserListFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Treasure.RoomUserInfo> _repeated_userList_codec
        = pb::FieldCodec.ForMessage(34, global::Treasure.RoomUserInfo.Parser);
    private readonly pbc::RepeatedField<global::Treasure.RoomUserInfo> userList_ = new pbc::RepeatedField<global::Treasure.RoomUserInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Treasure.RoomUserInfo> UserList {
      get { return userList_; }
    }

    /// <summary>Field number for the "chat_room_id" field.</summary>
    public const int ChatRoomIdFieldNumber = 5;
    private ulong chatRoomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ChatRoomId {
      get { return chatRoomId_; }
      set {
        chatRoomId_ = value;
      }
    }

    /// <summary>Field number for the "chat_room_addr" field.</summary>
    public const int ChatRoomAddrFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_chatRoomAddr_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> chatRoomAddr_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ChatRoomAddr {
      get { return chatRoomAddr_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      if (StatusMsg != other.StatusMsg) return false;
      if (RoomId != other.RoomId) return false;
      if(!userList_.Equals(other.userList_)) return false;
      if (ChatRoomId != other.ChatRoomId) return false;
      if(!chatRoomAddr_.Equals(other.chatRoomAddr_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (StatusMsg.Length != 0) hash ^= StatusMsg.GetHashCode();
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      hash ^= userList_.GetHashCode();
      if (ChatRoomId != 0UL) hash ^= ChatRoomId.GetHashCode();
      hash ^= chatRoomAddr_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (StatusMsg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StatusMsg);
      }
      if (RoomId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(RoomId);
      }
      userList_.WriteTo(output, _repeated_userList_codec);
      if (ChatRoomId != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(ChatRoomId);
      }
      chatRoomAddr_.WriteTo(output, _repeated_chatRoomAddr_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (StatusMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusMsg);
      }
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoomId);
      }
      size += userList_.CalculateSize(_repeated_userList_codec);
      if (ChatRoomId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ChatRoomId);
      }
      size += chatRoomAddr_.CalculateSize(_repeated_chatRoomAddr_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.StatusMsg.Length != 0) {
        StatusMsg = other.StatusMsg;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      userList_.Add(other.userList_);
      if (other.ChatRoomId != 0UL) {
        ChatRoomId = other.ChatRoomId;
      }
      chatRoomAddr_.Add(other.chatRoomAddr_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
          case 18: {
            StatusMsg = input.ReadString();
            break;
          }
          case 24: {
            RoomId = input.ReadUInt32();
            break;
          }
          case 34: {
            userList_.AddEntriesFrom(input, _repeated_userList_codec);
            break;
          }
          case 40: {
            ChatRoomId = input.ReadUInt64();
            break;
          }
          case 50: {
            chatRoomAddr_.AddEntriesFrom(input, _repeated_chatRoomAddr_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 离开房间
  /// </summary>
  public sealed partial class LeaveRoomReq : pb::IMessage<LeaveRoomReq> {
    private static readonly pb::MessageParser<LeaveRoomReq> _parser = new pb::MessageParser<LeaveRoomReq>(() => new LeaveRoomReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveRoomReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomReq(LeaveRoomReq other) : this() {
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomReq Clone() {
      return new LeaveRoomReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveRoomReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveRoomReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveRoomReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaveRoomResp : pb::IMessage<LeaveRoomResp> {
    private static readonly pb::MessageParser<LeaveRoomResp> _parser = new pb::MessageParser<LeaveRoomResp>(() => new LeaveRoomResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveRoomResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomResp(LeaveRoomResp other) : this() {
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomResp Clone() {
      return new LeaveRoomResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveRoomResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveRoomResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveRoomResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 本人进入挖宝空间
  /// </summary>
  public sealed partial class EnterTreasureReq : pb::IMessage<EnterTreasureReq> {
    private static readonly pb::MessageParser<EnterTreasureReq> _parser = new pb::MessageParser<EnterTreasureReq>(() => new EnterTreasureReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnterTreasureReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterTreasureReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterTreasureReq(EnterTreasureReq other) : this() {
      userId_ = other.userId_;
      fromUserId_ = other.fromUserId_;
      landId_ = other.landId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterTreasureReq Clone() {
      return new EnterTreasureReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 2;
    private ulong fromUserId_;
    /// <summary>
    ///是否有好友邀请
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "land_id" field.</summary>
    public const int LandIdFieldNumber = 3;
    private string landId_ = "";
    /// <summary>
    ///地块id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LandId {
      get { return landId_; }
      set {
        landId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnterTreasureReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnterTreasureReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (FromUserId != other.FromUserId) return false;
      if (LandId != other.LandId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (LandId.Length != 0) hash ^= LandId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (FromUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(FromUserId);
      }
      if (LandId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LandId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (LandId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LandId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnterTreasureReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.LandId.Length != 0) {
        LandId = other.LandId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
          case 16: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 26: {
            LandId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EnterTreasureResp : pb::IMessage<EnterTreasureResp> {
    private static readonly pb::MessageParser<EnterTreasureResp> _parser = new pb::MessageParser<EnterTreasureResp>(() => new EnterTreasureResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnterTreasureResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterTreasureResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterTreasureResp(EnterTreasureResp other) : this() {
      statusCode_ = other.statusCode_;
      roomInfo_ = other.roomInfo_ != null ? other.roomInfo_.Clone() : null;
      yunxinToken_ = other.yunxinToken_;
      yunxinAccid_ = other.yunxinAccid_;
      ownerInfo_ = other.ownerInfo_ != null ? other.ownerInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnterTreasureResp Clone() {
      return new EnterTreasureResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "room_info" field.</summary>
    public const int RoomInfoFieldNumber = 2;
    private global::Treasure.Room roomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Treasure.Room RoomInfo {
      get { return roomInfo_; }
      set {
        roomInfo_ = value;
      }
    }

    /// <summary>Field number for the "yunxin_token" field.</summary>
    public const int YunxinTokenFieldNumber = 3;
    private string yunxinToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string YunxinToken {
      get { return yunxinToken_; }
      set {
        yunxinToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "yunxin_accid" field.</summary>
    public const int YunxinAccidFieldNumber = 4;
    private string yunxinAccid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string YunxinAccid {
      get { return yunxinAccid_; }
      set {
        yunxinAccid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_info" field.</summary>
    public const int OwnerInfoFieldNumber = 5;
    private global::Treasure.RoomUserInfo ownerInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Treasure.RoomUserInfo OwnerInfo {
      get { return ownerInfo_; }
      set {
        ownerInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnterTreasureResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnterTreasureResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      if (!object.Equals(RoomInfo, other.RoomInfo)) return false;
      if (YunxinToken != other.YunxinToken) return false;
      if (YunxinAccid != other.YunxinAccid) return false;
      if (!object.Equals(OwnerInfo, other.OwnerInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (roomInfo_ != null) hash ^= RoomInfo.GetHashCode();
      if (YunxinToken.Length != 0) hash ^= YunxinToken.GetHashCode();
      if (YunxinAccid.Length != 0) hash ^= YunxinAccid.GetHashCode();
      if (ownerInfo_ != null) hash ^= OwnerInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (roomInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RoomInfo);
      }
      if (YunxinToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(YunxinToken);
      }
      if (YunxinAccid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(YunxinAccid);
      }
      if (ownerInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OwnerInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (roomInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomInfo);
      }
      if (YunxinToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(YunxinToken);
      }
      if (YunxinAccid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(YunxinAccid);
      }
      if (ownerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OwnerInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnterTreasureResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.roomInfo_ != null) {
        if (roomInfo_ == null) {
          RoomInfo = new global::Treasure.Room();
        }
        RoomInfo.MergeFrom(other.RoomInfo);
      }
      if (other.YunxinToken.Length != 0) {
        YunxinToken = other.YunxinToken;
      }
      if (other.YunxinAccid.Length != 0) {
        YunxinAccid = other.YunxinAccid;
      }
      if (other.ownerInfo_ != null) {
        if (ownerInfo_ == null) {
          OwnerInfo = new global::Treasure.RoomUserInfo();
        }
        OwnerInfo.MergeFrom(other.OwnerInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
          case 18: {
            if (roomInfo_ == null) {
              RoomInfo = new global::Treasure.Room();
            }
            input.ReadMessage(RoomInfo);
            break;
          }
          case 26: {
            YunxinToken = input.ReadString();
            break;
          }
          case 34: {
            YunxinAccid = input.ReadString();
            break;
          }
          case 42: {
            if (ownerInfo_ == null) {
              OwnerInfo = new global::Treasure.RoomUserInfo();
            }
            input.ReadMessage(OwnerInfo);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 他人进入挖宝空间推送
  /// </summary>
  public sealed partial class OtherEnterTreasurePush : pb::IMessage<OtherEnterTreasurePush> {
    private static readonly pb::MessageParser<OtherEnterTreasurePush> _parser = new pb::MessageParser<OtherEnterTreasurePush>(() => new OtherEnterTreasurePush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtherEnterTreasurePush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherEnterTreasurePush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherEnterTreasurePush(OtherEnterTreasurePush other) : this() {
      newUserInfo_ = other.newUserInfo_ != null ? other.newUserInfo_.Clone() : null;
      toUserId_ = other.toUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherEnterTreasurePush Clone() {
      return new OtherEnterTreasurePush(this);
    }

    /// <summary>Field number for the "new_user_info" field.</summary>
    public const int NewUserInfoFieldNumber = 1;
    private global::Treasure.RoomUserInfo newUserInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Treasure.RoomUserInfo NewUserInfo {
      get { return newUserInfo_; }
      set {
        newUserInfo_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 2;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtherEnterTreasurePush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtherEnterTreasurePush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NewUserInfo, other.NewUserInfo)) return false;
      if (ToUserId != other.ToUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (newUserInfo_ != null) hash ^= NewUserInfo.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (newUserInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NewUserInfo);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (newUserInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewUserInfo);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtherEnterTreasurePush other) {
      if (other == null) {
        return;
      }
      if (other.newUserInfo_ != null) {
        if (newUserInfo_ == null) {
          NewUserInfo = new global::Treasure.RoomUserInfo();
        }
        NewUserInfo.MergeFrom(other.NewUserInfo);
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (newUserInfo_ == null) {
              NewUserInfo = new global::Treasure.RoomUserInfo();
            }
            input.ReadMessage(NewUserInfo);
            break;
          }
          case 16: {
            ToUserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 他人离开挖宝空间推送
  /// </summary>
  public sealed partial class OtherLeaveTreasurePush : pb::IMessage<OtherLeaveTreasurePush> {
    private static readonly pb::MessageParser<OtherLeaveTreasurePush> _parser = new pb::MessageParser<OtherLeaveTreasurePush>(() => new OtherLeaveTreasurePush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtherLeaveTreasurePush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherLeaveTreasurePush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherLeaveTreasurePush(OtherLeaveTreasurePush other) : this() {
      fromUserId_ = other.fromUserId_;
      toUserId_ = other.toUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherLeaveTreasurePush Clone() {
      return new OtherLeaveTreasurePush(this);
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 2;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtherLeaveTreasurePush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtherLeaveTreasurePush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (ToUserId != other.ToUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtherLeaveTreasurePush other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 16: {
            ToUserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 房间其他人状态变化同步
  /// </summary>
  public sealed partial class OtherUserStatePush : pb::IMessage<OtherUserStatePush> {
    private static readonly pb::MessageParser<OtherUserStatePush> _parser = new pb::MessageParser<OtherUserStatePush>(() => new OtherUserStatePush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtherUserStatePush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherUserStatePush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherUserStatePush(OtherUserStatePush other) : this() {
      fromUserId_ = other.fromUserId_;
      toUserId_ = other.toUserId_;
      state_ = other.state_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherUserStatePush Clone() {
      return new OtherUserStatePush(this);
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 2;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private uint state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 4;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtherUserStatePush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtherUserStatePush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (ToUserId != other.ToUserId) return false;
      if (State != other.State) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToUserId);
      }
      if (State != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(State);
      }
      if (Index != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(State);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtherUserStatePush other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 16: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 24: {
            State = input.ReadUInt32();
            break;
          }
          case 32: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 邀请好友进入房间
  /// </summary>
  public sealed partial class InviteFriendReq : pb::IMessage<InviteFriendReq> {
    private static readonly pb::MessageParser<InviteFriendReq> _parser = new pb::MessageParser<InviteFriendReq>(() => new InviteFriendReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteFriendReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteFriendReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteFriendReq(InviteFriendReq other) : this() {
      fromUserId_ = other.fromUserId_;
      toUserId_ = other.toUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteFriendReq Clone() {
      return new InviteFriendReq(this);
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    /// <summary>
    /// 邀请者
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 2;
    private ulong toUserId_;
    /// <summary>
    /// 被邀请者
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteFriendReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteFriendReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (ToUserId != other.ToUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteFriendReq other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 16: {
            ToUserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteFriendResp : pb::IMessage<InviteFriendResp> {
    private static readonly pb::MessageParser<InviteFriendResp> _parser = new pb::MessageParser<InviteFriendResp>(() => new InviteFriendResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteFriendResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteFriendResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteFriendResp(InviteFriendResp other) : this() {
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteFriendResp Clone() {
      return new InviteFriendResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteFriendResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteFriendResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteFriendResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 他人邀请进入房间请求
  /// </summary>
  public sealed partial class OtherInvitePush : pb::IMessage<OtherInvitePush> {
    private static readonly pb::MessageParser<OtherInvitePush> _parser = new pb::MessageParser<OtherInvitePush>(() => new OtherInvitePush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtherInvitePush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherInvitePush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherInvitePush(OtherInvitePush other) : this() {
      fromUserInfo_ = other.fromUserInfo_ != null ? other.fromUserInfo_.Clone() : null;
      toUserId_ = other.toUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherInvitePush Clone() {
      return new OtherInvitePush(this);
    }

    /// <summary>Field number for the "from_user_info" field.</summary>
    public const int FromUserInfoFieldNumber = 1;
    private global::Treasure.RoomUserInfo fromUserInfo_;
    /// <summary>
    /// 邀请者信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Treasure.RoomUserInfo FromUserInfo {
      get { return fromUserInfo_; }
      set {
        fromUserInfo_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 2;
    private ulong toUserId_;
    /// <summary>
    /// 被邀请者
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtherInvitePush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtherInvitePush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FromUserInfo, other.FromUserInfo)) return false;
      if (ToUserId != other.ToUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (fromUserInfo_ != null) hash ^= FromUserInfo.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (fromUserInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FromUserInfo);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (fromUserInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromUserInfo);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtherInvitePush other) {
      if (other == null) {
        return;
      }
      if (other.fromUserInfo_ != null) {
        if (fromUserInfo_ == null) {
          FromUserInfo = new global::Treasure.RoomUserInfo();
        }
        FromUserInfo.MergeFrom(other.FromUserInfo);
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fromUserInfo_ == null) {
              FromUserInfo = new global::Treasure.RoomUserInfo();
            }
            input.ReadMessage(FromUserInfo);
            break;
          }
          case 16: {
            ToUserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 接受好友邀请
  /// </summary>
  public sealed partial class AgreeInviteReq : pb::IMessage<AgreeInviteReq> {
    private static readonly pb::MessageParser<AgreeInviteReq> _parser = new pb::MessageParser<AgreeInviteReq>(() => new AgreeInviteReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AgreeInviteReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeInviteReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeInviteReq(AgreeInviteReq other) : this() {
      fromUserId_ = other.fromUserId_;
      toUserId_ = other.toUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeInviteReq Clone() {
      return new AgreeInviteReq(this);
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    /// <summary>
    /// 接受谁的邀请
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 2;
    private ulong toUserId_;
    /// <summary>
    /// 被邀请者
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AgreeInviteReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AgreeInviteReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (ToUserId != other.ToUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AgreeInviteReq other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 16: {
            ToUserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 包含房间里面所有玩家信息
  /// </summary>
  public sealed partial class AgreeInviteResp : pb::IMessage<AgreeInviteResp> {
    private static readonly pb::MessageParser<AgreeInviteResp> _parser = new pb::MessageParser<AgreeInviteResp>(() => new AgreeInviteResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AgreeInviteResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeInviteResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeInviteResp(AgreeInviteResp other) : this() {
      statusCode_ = other.statusCode_;
      room_ = other.room_ != null ? other.room_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeInviteResp Clone() {
      return new AgreeInviteResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "room" field.</summary>
    public const int RoomFieldNumber = 2;
    private global::Treasure.Room room_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Treasure.Room Room {
      get { return room_; }
      set {
        room_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AgreeInviteResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AgreeInviteResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      if (!object.Equals(Room, other.Room)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (room_ != null) hash ^= Room.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (room_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Room);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (room_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Room);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AgreeInviteResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.room_ != null) {
        if (room_ == null) {
          Room = new global::Treasure.Room();
        }
        Room.MergeFrom(other.Room);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
          case 18: {
            if (room_ == null) {
              Room = new global::Treasure.Room();
            }
            input.ReadMessage(Room);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 拒绝好友邀请
  /// </summary>
  public sealed partial class RefuseInviteReq : pb::IMessage<RefuseInviteReq> {
    private static readonly pb::MessageParser<RefuseInviteReq> _parser = new pb::MessageParser<RefuseInviteReq>(() => new RefuseInviteReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RefuseInviteReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseInviteReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseInviteReq(RefuseInviteReq other) : this() {
      fromUserId_ = other.fromUserId_;
      toUserId_ = other.toUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseInviteReq Clone() {
      return new RefuseInviteReq(this);
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 2;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RefuseInviteReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RefuseInviteReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (ToUserId != other.ToUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RefuseInviteReq other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 16: {
            ToUserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RefuseInviteResp : pb::IMessage<RefuseInviteResp> {
    private static readonly pb::MessageParser<RefuseInviteResp> _parser = new pb::MessageParser<RefuseInviteResp>(() => new RefuseInviteResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RefuseInviteResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseInviteResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseInviteResp(RefuseInviteResp other) : this() {
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseInviteResp Clone() {
      return new RefuseInviteResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RefuseInviteResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RefuseInviteResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RefuseInviteResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RefuseInvitePush : pb::IMessage<RefuseInvitePush> {
    private static readonly pb::MessageParser<RefuseInvitePush> _parser = new pb::MessageParser<RefuseInvitePush>(() => new RefuseInvitePush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RefuseInvitePush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseInvitePush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseInvitePush(RefuseInvitePush other) : this() {
      fromUserId_ = other.fromUserId_;
      toUserId_ = other.toUserId_;
      fromUserName_ = other.fromUserName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseInvitePush Clone() {
      return new RefuseInvitePush(this);
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 2;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "from_user_name" field.</summary>
    public const int FromUserNameFieldNumber = 3;
    private string fromUserName_ = "";
    /// <summary>
    /// 谁拒绝了你
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromUserName {
      get { return fromUserName_; }
      set {
        fromUserName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RefuseInvitePush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RefuseInvitePush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (ToUserId != other.ToUserId) return false;
      if (FromUserName != other.FromUserName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (FromUserName.Length != 0) hash ^= FromUserName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToUserId);
      }
      if (FromUserName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FromUserName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (FromUserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromUserName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RefuseInvitePush other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.FromUserName.Length != 0) {
        FromUserName = other.FromUserName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 16: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 26: {
            FromUserName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 邀请附近的人组队
  /// </summary>
  public sealed partial class InviteJoinTeamReq : pb::IMessage<InviteJoinTeamReq> {
    private static readonly pb::MessageParser<InviteJoinTeamReq> _parser = new pb::MessageParser<InviteJoinTeamReq>(() => new InviteJoinTeamReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteJoinTeamReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteJoinTeamReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteJoinTeamReq(InviteJoinTeamReq other) : this() {
      fromUserId_ = other.fromUserId_;
      toUserId_ = other.toUserId_;
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteJoinTeamReq Clone() {
      return new InviteJoinTeamReq(this);
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    /// <summary>
    /// 邀请者
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 2;
    private ulong toUserId_;
    /// <summary>
    /// 被邀请者
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 3;
    private uint roomId_;
    /// <summary>
    /// 邀请者房间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteJoinTeamReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteJoinTeamReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (ToUserId != other.ToUserId) return false;
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToUserId);
      }
      if (RoomId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteJoinTeamReq other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 16: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 24: {
            RoomId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteJoinTeamResp : pb::IMessage<InviteJoinTeamResp> {
    private static readonly pb::MessageParser<InviteJoinTeamResp> _parser = new pb::MessageParser<InviteJoinTeamResp>(() => new InviteJoinTeamResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteJoinTeamResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteJoinTeamResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteJoinTeamResp(InviteJoinTeamResp other) : this() {
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteJoinTeamResp Clone() {
      return new InviteJoinTeamResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteJoinTeamResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteJoinTeamResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteJoinTeamResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 他人邀请组队请求
  /// </summary>
  public sealed partial class OtherInviteJoinTeamPush : pb::IMessage<OtherInviteJoinTeamPush> {
    private static readonly pb::MessageParser<OtherInviteJoinTeamPush> _parser = new pb::MessageParser<OtherInviteJoinTeamPush>(() => new OtherInviteJoinTeamPush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtherInviteJoinTeamPush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherInviteJoinTeamPush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherInviteJoinTeamPush(OtherInviteJoinTeamPush other) : this() {
      fromUserInfo_ = other.fromUserInfo_ != null ? other.fromUserInfo_.Clone() : null;
      toUserId_ = other.toUserId_;
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherInviteJoinTeamPush Clone() {
      return new OtherInviteJoinTeamPush(this);
    }

    /// <summary>Field number for the "from_user_info" field.</summary>
    public const int FromUserInfoFieldNumber = 1;
    private global::Treasure.RoomUserInfo fromUserInfo_;
    /// <summary>
    /// 邀请者信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Treasure.RoomUserInfo FromUserInfo {
      get { return fromUserInfo_; }
      set {
        fromUserInfo_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 2;
    private ulong toUserId_;
    /// <summary>
    /// 被邀请者
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 3;
    private uint roomId_;
    /// <summary>
    /// 邀请者房间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtherInviteJoinTeamPush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtherInviteJoinTeamPush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FromUserInfo, other.FromUserInfo)) return false;
      if (ToUserId != other.ToUserId) return false;
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (fromUserInfo_ != null) hash ^= FromUserInfo.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (fromUserInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FromUserInfo);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToUserId);
      }
      if (RoomId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (fromUserInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromUserInfo);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtherInviteJoinTeamPush other) {
      if (other == null) {
        return;
      }
      if (other.fromUserInfo_ != null) {
        if (fromUserInfo_ == null) {
          FromUserInfo = new global::Treasure.RoomUserInfo();
        }
        FromUserInfo.MergeFrom(other.FromUserInfo);
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fromUserInfo_ == null) {
              FromUserInfo = new global::Treasure.RoomUserInfo();
            }
            input.ReadMessage(FromUserInfo);
            break;
          }
          case 16: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 24: {
            RoomId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 同意附近的人组队
  /// </summary>
  public sealed partial class AgreeJoinTeamReq : pb::IMessage<AgreeJoinTeamReq> {
    private static readonly pb::MessageParser<AgreeJoinTeamReq> _parser = new pb::MessageParser<AgreeJoinTeamReq>(() => new AgreeJoinTeamReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AgreeJoinTeamReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeJoinTeamReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeJoinTeamReq(AgreeJoinTeamReq other) : this() {
      fromUserId_ = other.fromUserId_;
      toUserId_ = other.toUserId_;
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeJoinTeamReq Clone() {
      return new AgreeJoinTeamReq(this);
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    /// <summary>
    /// 邀请者
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 2;
    private ulong toUserId_;
    /// <summary>
    /// 被邀请者
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 3;
    private uint roomId_;
    /// <summary>
    /// 邀请者房间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AgreeJoinTeamReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AgreeJoinTeamReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (ToUserId != other.ToUserId) return false;
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToUserId);
      }
      if (RoomId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AgreeJoinTeamReq other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 16: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 24: {
            RoomId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AgreeJoinTeamResp : pb::IMessage<AgreeJoinTeamResp> {
    private static readonly pb::MessageParser<AgreeJoinTeamResp> _parser = new pb::MessageParser<AgreeJoinTeamResp>(() => new AgreeJoinTeamResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AgreeJoinTeamResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeJoinTeamResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeJoinTeamResp(AgreeJoinTeamResp other) : this() {
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgreeJoinTeamResp Clone() {
      return new AgreeJoinTeamResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AgreeJoinTeamResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AgreeJoinTeamResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AgreeJoinTeamResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 拒绝附近的人邀请
  /// </summary>
  public sealed partial class RefuseNearInviteReq : pb::IMessage<RefuseNearInviteReq> {
    private static readonly pb::MessageParser<RefuseNearInviteReq> _parser = new pb::MessageParser<RefuseNearInviteReq>(() => new RefuseNearInviteReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RefuseNearInviteReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseNearInviteReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseNearInviteReq(RefuseNearInviteReq other) : this() {
      fromUserId_ = other.fromUserId_;
      toUserId_ = other.toUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseNearInviteReq Clone() {
      return new RefuseNearInviteReq(this);
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 2;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RefuseNearInviteReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RefuseNearInviteReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (ToUserId != other.ToUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RefuseNearInviteReq other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 16: {
            ToUserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RefuseNearInviteResp : pb::IMessage<RefuseNearInviteResp> {
    private static readonly pb::MessageParser<RefuseNearInviteResp> _parser = new pb::MessageParser<RefuseNearInviteResp>(() => new RefuseNearInviteResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RefuseNearInviteResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseNearInviteResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseNearInviteResp(RefuseNearInviteResp other) : this() {
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseNearInviteResp Clone() {
      return new RefuseNearInviteResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RefuseNearInviteResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RefuseNearInviteResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RefuseNearInviteResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RefuseNearInvitePush : pb::IMessage<RefuseNearInvitePush> {
    private static readonly pb::MessageParser<RefuseNearInvitePush> _parser = new pb::MessageParser<RefuseNearInvitePush>(() => new RefuseNearInvitePush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RefuseNearInvitePush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseNearInvitePush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseNearInvitePush(RefuseNearInvitePush other) : this() {
      fromUserId_ = other.fromUserId_;
      toUserId_ = other.toUserId_;
      fromUserName_ = other.fromUserName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefuseNearInvitePush Clone() {
      return new RefuseNearInvitePush(this);
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 2;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "from_user_name" field.</summary>
    public const int FromUserNameFieldNumber = 3;
    private string fromUserName_ = "";
    /// <summary>
    /// 谁拒绝了你
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromUserName {
      get { return fromUserName_; }
      set {
        fromUserName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RefuseNearInvitePush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RefuseNearInvitePush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (ToUserId != other.ToUserId) return false;
      if (FromUserName != other.FromUserName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (FromUserName.Length != 0) hash ^= FromUserName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToUserId);
      }
      if (FromUserName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FromUserName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (FromUserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromUserName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RefuseNearInvitePush other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.FromUserName.Length != 0) {
        FromUserName = other.FromUserName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 16: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 26: {
            FromUserName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerState : pb::IMessage<PlayerState> {
    private static readonly pb::MessageParser<PlayerState> _parser = new pb::MessageParser<PlayerState>(() => new PlayerState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerState(PlayerState other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerState Clone() {
      return new PlayerState(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerState other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PlayerState message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        [pbr::OriginalName("None")] None = 0,
        /// <summary>
        ///空闲
        /// </summary>
        [pbr::OriginalName("Idle")] Idle = 1,
        /// <summary>
        ///组队中
        /// </summary>
        [pbr::OriginalName("Grouping")] Grouping = 2,
        /// <summary>
        ///已邀请
        /// </summary>
        [pbr::OriginalName("Invited")] Invited = 3,
        /// <summary>
        ///挖宝准备中
        /// </summary>
        [pbr::OriginalName("Ready")] Ready = 4,
        /// <summary>
        ///挖宝中
        /// </summary>
        [pbr::OriginalName("Treasureing")] Treasureing = 5,
      }

    }
    #endregion

  }

  public sealed partial class PlayStateReq : pb::IMessage<PlayStateReq> {
    private static readonly pb::MessageParser<PlayStateReq> _parser = new pb::MessageParser<PlayStateReq>(() => new PlayStateReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayStateReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayStateReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayStateReq(PlayStateReq other) : this() {
      userIds_ = other.userIds_.Clone();
      fromUserId_ = other.fromUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayStateReq Clone() {
      return new PlayStateReq(this);
    }

    /// <summary>Field number for the "user_ids" field.</summary>
    public const int UserIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_userIds_codec
        = pb::FieldCodec.ForUInt64(10);
    private readonly pbc::RepeatedField<ulong> userIds_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> UserIds {
      get { return userIds_; }
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 2;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayStateReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayStateReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!userIds_.Equals(other.userIds_)) return false;
      if (FromUserId != other.FromUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= userIds_.GetHashCode();
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      userIds_.WriteTo(output, _repeated_userIds_codec);
      if (FromUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(FromUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += userIds_.CalculateSize(_repeated_userIds_codec);
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayStateReq other) {
      if (other == null) {
        return;
      }
      userIds_.Add(other.userIds_);
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            userIds_.AddEntriesFrom(input, _repeated_userIds_codec);
            break;
          }
          case 16: {
            FromUserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayStateResp : pb::IMessage<PlayStateResp> {
    private static readonly pb::MessageParser<PlayStateResp> _parser = new pb::MessageParser<PlayStateResp>(() => new PlayStateResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayStateResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayStateResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayStateResp(PlayStateResp other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayStateResp Clone() {
      return new PlayStateResp(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Treasure.RoomUserInfo> _repeated_list_codec
        = pb::FieldCodec.ForMessage(10, global::Treasure.RoomUserInfo.Parser);
    private readonly pbc::RepeatedField<global::Treasure.RoomUserInfo> list_ = new pbc::RepeatedField<global::Treasure.RoomUserInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Treasure.RoomUserInfo> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayStateResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayStateResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!list_.Equals(other.list_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= list_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _repeated_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_repeated_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayStateResp other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TeamInfoReq : pb::IMessage<TeamInfoReq> {
    private static readonly pb::MessageParser<TeamInfoReq> _parser = new pb::MessageParser<TeamInfoReq>(() => new TeamInfoReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeamInfoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamInfoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamInfoReq(TeamInfoReq other) : this() {
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamInfoReq Clone() {
      return new TeamInfoReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeamInfoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeamInfoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeamInfoReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TeamInfoResp : pb::IMessage<TeamInfoResp> {
    private static readonly pb::MessageParser<TeamInfoResp> _parser = new pb::MessageParser<TeamInfoResp>(() => new TeamInfoResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeamInfoResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamInfoResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamInfoResp(TeamInfoResp other) : this() {
      list_ = other.list_.Clone();
      statusCode_ = other.statusCode_;
      toUserId_ = other.toUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamInfoResp Clone() {
      return new TeamInfoResp(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Treasure.RoomUserInfo> _repeated_list_codec
        = pb::FieldCodec.ForMessage(10, global::Treasure.RoomUserInfo.Parser);
    private readonly pbc::RepeatedField<global::Treasure.RoomUserInfo> list_ = new pbc::RepeatedField<global::Treasure.RoomUserInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Treasure.RoomUserInfo> List {
      get { return list_; }
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 2;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 3;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeamInfoResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeamInfoResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!list_.Equals(other.list_)) return false;
      if (StatusCode != other.StatusCode) return false;
      if (ToUserId != other.ToUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= list_.GetHashCode();
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _repeated_list_codec);
      if (StatusCode != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(StatusCode);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ToUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_repeated_list_codec);
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeamInfoResp other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
          case 16: {
            StatusCode = input.ReadUInt32();
            break;
          }
          case 24: {
            ToUserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaveTeamReq : pb::IMessage<LeaveTeamReq> {
    private static readonly pb::MessageParser<LeaveTeamReq> _parser = new pb::MessageParser<LeaveTeamReq>(() => new LeaveTeamReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveTeamReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveTeamReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveTeamReq(LeaveTeamReq other) : this() {
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveTeamReq Clone() {
      return new LeaveTeamReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveTeamReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveTeamReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveTeamReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaveTeamResp : pb::IMessage<LeaveTeamResp> {
    private static readonly pb::MessageParser<LeaveTeamResp> _parser = new pb::MessageParser<LeaveTeamResp>(() => new LeaveTeamResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveTeamResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveTeamResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveTeamResp(LeaveTeamResp other) : this() {
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveTeamResp Clone() {
      return new LeaveTeamResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveTeamResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveTeamResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveTeamResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 好友状态变化同步
  /// </summary>
  public sealed partial class FriendStatePush : pb::IMessage<FriendStatePush> {
    private static readonly pb::MessageParser<FriendStatePush> _parser = new pb::MessageParser<FriendStatePush>(() => new FriendStatePush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendStatePush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendStatePush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendStatePush(FriendStatePush other) : this() {
      fromUserId_ = other.fromUserId_;
      toUserId_ = other.toUserId_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendStatePush Clone() {
      return new FriendStatePush(this);
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 2;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private uint state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendStatePush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendStatePush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (ToUserId != other.ToUserId) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToUserId);
      }
      if (State != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendStatePush other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 16: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 24: {
            State = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 准备挖宝
  /// </summary>
  public sealed partial class ReadyTreasureReq : pb::IMessage<ReadyTreasureReq> {
    private static readonly pb::MessageParser<ReadyTreasureReq> _parser = new pb::MessageParser<ReadyTreasureReq>(() => new ReadyTreasureReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadyTreasureReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyTreasureReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyTreasureReq(ReadyTreasureReq other) : this() {
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyTreasureReq Clone() {
      return new ReadyTreasureReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadyTreasureReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadyTreasureReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadyTreasureReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReadyTreasureResp : pb::IMessage<ReadyTreasureResp> {
    private static readonly pb::MessageParser<ReadyTreasureResp> _parser = new pb::MessageParser<ReadyTreasureResp>(() => new ReadyTreasureResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadyTreasureResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyTreasureResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyTreasureResp(ReadyTreasureResp other) : this() {
      statusCode_ = other.statusCode_;
      testToken_ = other.testToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyTreasureResp Clone() {
      return new ReadyTreasureResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "test_token" field.</summary>
    public const int TestTokenFieldNumber = 2;
    private string testToken_ = "";
    /// <summary>
    ///测试server更新pb, 客户端不更新
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestToken {
      get { return testToken_; }
      set {
        testToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadyTreasureResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadyTreasureResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      if (TestToken != other.TestToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (TestToken.Length != 0) hash ^= TestToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (TestToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TestToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (TestToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadyTreasureResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.TestToken.Length != 0) {
        TestToken = other.TestToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
          case 18: {
            TestToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReadyTreasurePush : pb::IMessage<ReadyTreasurePush> {
    private static readonly pb::MessageParser<ReadyTreasurePush> _parser = new pb::MessageParser<ReadyTreasurePush>(() => new ReadyTreasurePush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadyTreasurePush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyTreasurePush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyTreasurePush(ReadyTreasurePush other) : this() {
      toUserId_ = other.toUserId_;
      state_ = other.state_;
      fromUserId_ = other.fromUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyTreasurePush Clone() {
      return new ReadyTreasurePush(this);
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 1;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private uint state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 3;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadyTreasurePush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadyTreasurePush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ToUserId != other.ToUserId) return false;
      if (State != other.State) return false;
      if (FromUserId != other.FromUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ToUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ToUserId);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(State);
      }
      if (FromUserId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(FromUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(State);
      }
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadyTreasurePush other) {
      if (other == null) {
        return;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 16: {
            State = input.ReadUInt32();
            break;
          }
          case 24: {
            FromUserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CancelReadyTreasureReq : pb::IMessage<CancelReadyTreasureReq> {
    private static readonly pb::MessageParser<CancelReadyTreasureReq> _parser = new pb::MessageParser<CancelReadyTreasureReq>(() => new CancelReadyTreasureReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelReadyTreasureReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelReadyTreasureReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelReadyTreasureReq(CancelReadyTreasureReq other) : this() {
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelReadyTreasureReq Clone() {
      return new CancelReadyTreasureReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelReadyTreasureReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelReadyTreasureReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelReadyTreasureReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CancelReadyTreasureResp : pb::IMessage<CancelReadyTreasureResp> {
    private static readonly pb::MessageParser<CancelReadyTreasureResp> _parser = new pb::MessageParser<CancelReadyTreasureResp>(() => new CancelReadyTreasureResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelReadyTreasureResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelReadyTreasureResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelReadyTreasureResp(CancelReadyTreasureResp other) : this() {
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelReadyTreasureResp Clone() {
      return new CancelReadyTreasureResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelReadyTreasureResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelReadyTreasureResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelReadyTreasureResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CancelReadyTreasurePush : pb::IMessage<CancelReadyTreasurePush> {
    private static readonly pb::MessageParser<CancelReadyTreasurePush> _parser = new pb::MessageParser<CancelReadyTreasurePush>(() => new CancelReadyTreasurePush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelReadyTreasurePush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelReadyTreasurePush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelReadyTreasurePush(CancelReadyTreasurePush other) : this() {
      toUserId_ = other.toUserId_;
      state_ = other.state_;
      fromUserId_ = other.fromUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelReadyTreasurePush Clone() {
      return new CancelReadyTreasurePush(this);
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 1;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private uint state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 3;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelReadyTreasurePush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelReadyTreasurePush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ToUserId != other.ToUserId) return false;
      if (State != other.State) return false;
      if (FromUserId != other.FromUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ToUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ToUserId);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(State);
      }
      if (FromUserId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(FromUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(State);
      }
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelReadyTreasurePush other) {
      if (other == null) {
        return;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 16: {
            State = input.ReadUInt32();
            break;
          }
          case 24: {
            FromUserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartTreasurePush : pb::IMessage<StartTreasurePush> {
    private static readonly pb::MessageParser<StartTreasurePush> _parser = new pb::MessageParser<StartTreasurePush>(() => new StartTreasurePush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartTreasurePush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartTreasurePush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartTreasurePush(StartTreasurePush other) : this() {
      toUserId_ = other.toUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartTreasurePush Clone() {
      return new StartTreasurePush(this);
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 1;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartTreasurePush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartTreasurePush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ToUserId != other.ToUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ToUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ToUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartTreasurePush other) {
      if (other == null) {
        return;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ToUserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TreasureRecord : pb::IMessage<TreasureRecord> {
    private static readonly pb::MessageParser<TreasureRecord> _parser = new pb::MessageParser<TreasureRecord>(() => new TreasureRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TreasureRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRecord(TreasureRecord other) : this() {
      id_ = other.id_;
      userId_ = other.userId_;
      userName_ = other.userName_;
      roomId_ = other.roomId_;
      teamUsers_ = other.teamUsers_;
      rewardId_ = other.rewardId_;
      rewardName_ = other.rewardName_;
      rewardQuantity_ = other.rewardQuantity_;
      rewardType_ = other.rewardType_;
      rewardRare_ = other.rewardRare_;
      rewardCollection_ = other.rewardCollection_;
      createdAt_ = other.createdAt_;
      updatedAt_ = other.updatedAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRecord Clone() {
      return new TreasureRecord(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 3;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 4;
    private uint roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "team_users" field.</summary>
    public const int TeamUsersFieldNumber = 5;
    private string teamUsers_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TeamUsers {
      get { return teamUsers_; }
      set {
        teamUsers_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reward_id" field.</summary>
    public const int RewardIdFieldNumber = 6;
    private uint rewardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RewardId {
      get { return rewardId_; }
      set {
        rewardId_ = value;
      }
    }

    /// <summary>Field number for the "reward_name" field.</summary>
    public const int RewardNameFieldNumber = 7;
    private string rewardName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RewardName {
      get { return rewardName_; }
      set {
        rewardName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reward_quantity" field.</summary>
    public const int RewardQuantityFieldNumber = 8;
    private uint rewardQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RewardQuantity {
      get { return rewardQuantity_; }
      set {
        rewardQuantity_ = value;
      }
    }

    /// <summary>Field number for the "reward_type" field.</summary>
    public const int RewardTypeFieldNumber = 9;
    private uint rewardType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RewardType {
      get { return rewardType_; }
      set {
        rewardType_ = value;
      }
    }

    /// <summary>Field number for the "reward_rare" field.</summary>
    public const int RewardRareFieldNumber = 10;
    private uint rewardRare_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RewardRare {
      get { return rewardRare_; }
      set {
        rewardRare_ = value;
      }
    }

    /// <summary>Field number for the "reward_collection" field.</summary>
    public const int RewardCollectionFieldNumber = 11;
    private uint rewardCollection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RewardCollection {
      get { return rewardCollection_; }
      set {
        rewardCollection_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 12;
    private long createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 13;
    private long updatedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TreasureRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TreasureRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (UserId != other.UserId) return false;
      if (UserName != other.UserName) return false;
      if (RoomId != other.RoomId) return false;
      if (TeamUsers != other.TeamUsers) return false;
      if (RewardId != other.RewardId) return false;
      if (RewardName != other.RewardName) return false;
      if (RewardQuantity != other.RewardQuantity) return false;
      if (RewardType != other.RewardType) return false;
      if (RewardRare != other.RewardRare) return false;
      if (RewardCollection != other.RewardCollection) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (TeamUsers.Length != 0) hash ^= TeamUsers.GetHashCode();
      if (RewardId != 0) hash ^= RewardId.GetHashCode();
      if (RewardName.Length != 0) hash ^= RewardName.GetHashCode();
      if (RewardQuantity != 0) hash ^= RewardQuantity.GetHashCode();
      if (RewardType != 0) hash ^= RewardType.GetHashCode();
      if (RewardRare != 0) hash ^= RewardRare.GetHashCode();
      if (RewardCollection != 0) hash ^= RewardCollection.GetHashCode();
      if (CreatedAt != 0L) hash ^= CreatedAt.GetHashCode();
      if (UpdatedAt != 0L) hash ^= UpdatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (UserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(UserId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserName);
      }
      if (RoomId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(RoomId);
      }
      if (TeamUsers.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TeamUsers);
      }
      if (RewardId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(RewardId);
      }
      if (RewardName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RewardName);
      }
      if (RewardQuantity != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(RewardQuantity);
      }
      if (RewardType != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(RewardType);
      }
      if (RewardRare != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(RewardRare);
      }
      if (RewardCollection != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(RewardCollection);
      }
      if (CreatedAt != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(CreatedAt);
      }
      if (UpdatedAt != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(UpdatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoomId);
      }
      if (TeamUsers.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamUsers);
      }
      if (RewardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardId);
      }
      if (RewardName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardName);
      }
      if (RewardQuantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardQuantity);
      }
      if (RewardType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardType);
      }
      if (RewardRare != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardRare);
      }
      if (RewardCollection != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardCollection);
      }
      if (CreatedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatedAt);
      }
      if (UpdatedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UpdatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TreasureRecord other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      if (other.TeamUsers.Length != 0) {
        TeamUsers = other.TeamUsers;
      }
      if (other.RewardId != 0) {
        RewardId = other.RewardId;
      }
      if (other.RewardName.Length != 0) {
        RewardName = other.RewardName;
      }
      if (other.RewardQuantity != 0) {
        RewardQuantity = other.RewardQuantity;
      }
      if (other.RewardType != 0) {
        RewardType = other.RewardType;
      }
      if (other.RewardRare != 0) {
        RewardRare = other.RewardRare;
      }
      if (other.RewardCollection != 0) {
        RewardCollection = other.RewardCollection;
      }
      if (other.CreatedAt != 0L) {
        CreatedAt = other.CreatedAt;
      }
      if (other.UpdatedAt != 0L) {
        UpdatedAt = other.UpdatedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            UserId = input.ReadUInt64();
            break;
          }
          case 26: {
            UserName = input.ReadString();
            break;
          }
          case 32: {
            RoomId = input.ReadUInt32();
            break;
          }
          case 42: {
            TeamUsers = input.ReadString();
            break;
          }
          case 48: {
            RewardId = input.ReadUInt32();
            break;
          }
          case 58: {
            RewardName = input.ReadString();
            break;
          }
          case 64: {
            RewardQuantity = input.ReadUInt32();
            break;
          }
          case 72: {
            RewardType = input.ReadUInt32();
            break;
          }
          case 80: {
            RewardRare = input.ReadUInt32();
            break;
          }
          case 88: {
            RewardCollection = input.ReadUInt32();
            break;
          }
          case 96: {
            CreatedAt = input.ReadInt64();
            break;
          }
          case 104: {
            UpdatedAt = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateTreasureRecordReq : pb::IMessage<CreateTreasureRecordReq> {
    private static readonly pb::MessageParser<CreateTreasureRecordReq> _parser = new pb::MessageParser<CreateTreasureRecordReq>(() => new CreateTreasureRecordReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTreasureRecordReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTreasureRecordReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTreasureRecordReq(CreateTreasureRecordReq other) : this() {
      data_ = other.data_ != null ? other.data_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTreasureRecordReq Clone() {
      return new CreateTreasureRecordReq(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private global::Treasure.TreasureRecord data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Treasure.TreasureRecord Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTreasureRecordReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTreasureRecordReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Data, other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (data_ != null) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (data_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTreasureRecordReq other) {
      if (other == null) {
        return;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Treasure.TreasureRecord();
        }
        Data.MergeFrom(other.Data);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (data_ == null) {
              Data = new global::Treasure.TreasureRecord();
            }
            input.ReadMessage(Data);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateTreasureRecordResp : pb::IMessage<CreateTreasureRecordResp> {
    private static readonly pb::MessageParser<CreateTreasureRecordResp> _parser = new pb::MessageParser<CreateTreasureRecordResp>(() => new CreateTreasureRecordResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTreasureRecordResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTreasureRecordResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTreasureRecordResp(CreateTreasureRecordResp other) : this() {
      id_ = other.id_;
      statusCode_ = other.statusCode_;
      rewardId_ = other.rewardId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTreasureRecordResp Clone() {
      return new CreateTreasureRecordResp(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 2;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "reward_id" field.</summary>
    public const int RewardIdFieldNumber = 3;
    private uint rewardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RewardId {
      get { return rewardId_; }
      set {
        rewardId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTreasureRecordResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTreasureRecordResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (StatusCode != other.StatusCode) return false;
      if (RewardId != other.RewardId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (RewardId != 0) hash ^= RewardId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (StatusCode != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(StatusCode);
      }
      if (RewardId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(RewardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (RewardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTreasureRecordResp other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.RewardId != 0) {
        RewardId = other.RewardId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            StatusCode = input.ReadUInt32();
            break;
          }
          case 24: {
            RewardId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateTreasureRecordReq : pb::IMessage<UpdateTreasureRecordReq> {
    private static readonly pb::MessageParser<UpdateTreasureRecordReq> _parser = new pb::MessageParser<UpdateTreasureRecordReq>(() => new UpdateTreasureRecordReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTreasureRecordReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTreasureRecordReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTreasureRecordReq(UpdateTreasureRecordReq other) : this() {
      data_ = other.data_ != null ? other.data_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTreasureRecordReq Clone() {
      return new UpdateTreasureRecordReq(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private global::Treasure.TreasureRecord data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Treasure.TreasureRecord Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTreasureRecordReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTreasureRecordReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Data, other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (data_ != null) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (data_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTreasureRecordReq other) {
      if (other == null) {
        return;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Treasure.TreasureRecord();
        }
        Data.MergeFrom(other.Data);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (data_ == null) {
              Data = new global::Treasure.TreasureRecord();
            }
            input.ReadMessage(Data);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateTreasureRecordResp : pb::IMessage<UpdateTreasureRecordResp> {
    private static readonly pb::MessageParser<UpdateTreasureRecordResp> _parser = new pb::MessageParser<UpdateTreasureRecordResp>(() => new UpdateTreasureRecordResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTreasureRecordResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTreasureRecordResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTreasureRecordResp(UpdateTreasureRecordResp other) : this() {
      id_ = other.id_;
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTreasureRecordResp Clone() {
      return new UpdateTreasureRecordResp(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 2;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTreasureRecordResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTreasureRecordResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (StatusCode != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTreasureRecordResp other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TreasureRecordListReq : pb::IMessage<TreasureRecordListReq> {
    private static readonly pb::MessageParser<TreasureRecordListReq> _parser = new pb::MessageParser<TreasureRecordListReq>(() => new TreasureRecordListReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TreasureRecordListReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRecordListReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRecordListReq(TreasureRecordListReq other) : this() {
      page_ = other.page_;
      pageSize_ = other.pageSize_;
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRecordListReq Clone() {
      return new TreasureRecordListReq(this);
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 1;
    private uint page_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private uint pageSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TreasureRecordListReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TreasureRecordListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Page != other.Page) return false;
      if (PageSize != other.PageSize) return false;
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Page != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Page);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PageSize);
      }
      if (UserId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PageSize);
      }
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TreasureRecordListReq other) {
      if (other == null) {
        return;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Page = input.ReadUInt32();
            break;
          }
          case 16: {
            PageSize = input.ReadUInt32();
            break;
          }
          case 24: {
            UserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TreasureRecordListResp : pb::IMessage<TreasureRecordListResp> {
    private static readonly pb::MessageParser<TreasureRecordListResp> _parser = new pb::MessageParser<TreasureRecordListResp>(() => new TreasureRecordListResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TreasureRecordListResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRecordListResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRecordListResp(TreasureRecordListResp other) : this() {
      total_ = other.total_;
      list_ = other.list_.Clone();
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRecordListResp Clone() {
      return new TreasureRecordListResp(this);
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 1;
    private uint total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Treasure.TreasureRecord> _repeated_list_codec
        = pb::FieldCodec.ForMessage(18, global::Treasure.TreasureRecord.Parser);
    private readonly pbc::RepeatedField<global::Treasure.TreasureRecord> list_ = new pbc::RepeatedField<global::Treasure.TreasureRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Treasure.TreasureRecord> List {
      get { return list_; }
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 3;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TreasureRecordListResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TreasureRecordListResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Total != other.Total) return false;
      if(!list_.Equals(other.list_)) return false;
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= list_.GetHashCode();
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Total != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Total);
      }
      list_.WriteTo(output, _repeated_list_codec);
      if (StatusCode != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Total);
      }
      size += list_.CalculateSize(_repeated_list_codec);
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TreasureRecordListResp other) {
      if (other == null) {
        return;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      list_.Add(other.list_);
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Total = input.ReadUInt32();
            break;
          }
          case 18: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
          case 24: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OpenTimeReq : pb::IMessage<OpenTimeReq> {
    private static readonly pb::MessageParser<OpenTimeReq> _parser = new pb::MessageParser<OpenTimeReq>(() => new OpenTimeReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpenTimeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenTimeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenTimeReq(OpenTimeReq other) : this() {
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenTimeReq Clone() {
      return new OpenTimeReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpenTimeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpenTimeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpenTimeReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OpenTimeResp : pb::IMessage<OpenTimeResp> {
    private static readonly pb::MessageParser<OpenTimeResp> _parser = new pb::MessageParser<OpenTimeResp>(() => new OpenTimeResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpenTimeResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenTimeResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenTimeResp(OpenTimeResp other) : this() {
      statusCode_ = other.statusCode_;
      start_ = other.start_;
      end_ = other.end_;
      cur_ = other.cur_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenTimeResp Clone() {
      return new OpenTimeResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 2;
    private uint start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 3;
    private uint end_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    /// <summary>Field number for the "cur" field.</summary>
    public const int CurFieldNumber = 4;
    private uint cur_;
    /// <summary>
    /// 服务器当前时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Cur {
      get { return cur_; }
      set {
        cur_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpenTimeResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpenTimeResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      if (Start != other.Start) return false;
      if (End != other.End) return false;
      if (Cur != other.Cur) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (Start != 0) hash ^= Start.GetHashCode();
      if (End != 0) hash ^= End.GetHashCode();
      if (Cur != 0) hash ^= Cur.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (Start != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Start);
      }
      if (End != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(End);
      }
      if (Cur != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Cur);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (Start != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Start);
      }
      if (End != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(End);
      }
      if (Cur != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Cur);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpenTimeResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.Start != 0) {
        Start = other.Start;
      }
      if (other.End != 0) {
        End = other.End;
      }
      if (other.Cur != 0) {
        Cur = other.Cur;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
          case 16: {
            Start = input.ReadUInt32();
            break;
          }
          case 24: {
            End = input.ReadUInt32();
            break;
          }
          case 32: {
            Cur = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RewardPush : pb::IMessage<RewardPush> {
    private static readonly pb::MessageParser<RewardPush> _parser = new pb::MessageParser<RewardPush>(() => new RewardPush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RewardPush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardPush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardPush(RewardPush other) : this() {
      userId_ = other.userId_;
      userName_ = other.userName_;
      rewardId_ = other.rewardId_;
      circleIndex_ = other.circleIndex_;
      ticketConsumeId_ = other.ticketConsumeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardPush Clone() {
      return new RewardPush(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 2;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reward_id" field.</summary>
    public const int RewardIdFieldNumber = 3;
    private uint rewardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RewardId {
      get { return rewardId_; }
      set {
        rewardId_ = value;
      }
    }

    /// <summary>Field number for the "circle_index" field.</summary>
    public const int CircleIndexFieldNumber = 4;
    private uint circleIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CircleIndex {
      get { return circleIndex_; }
      set {
        circleIndex_ = value;
      }
    }

    /// <summary>Field number for the "ticket_consume_id" field.</summary>
    public const int TicketConsumeIdFieldNumber = 5;
    private ulong ticketConsumeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TicketConsumeId {
      get { return ticketConsumeId_; }
      set {
        ticketConsumeId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RewardPush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RewardPush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (UserName != other.UserName) return false;
      if (RewardId != other.RewardId) return false;
      if (CircleIndex != other.CircleIndex) return false;
      if (TicketConsumeId != other.TicketConsumeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (RewardId != 0) hash ^= RewardId.GetHashCode();
      if (CircleIndex != 0) hash ^= CircleIndex.GetHashCode();
      if (TicketConsumeId != 0UL) hash ^= TicketConsumeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (RewardId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(RewardId);
      }
      if (CircleIndex != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(CircleIndex);
      }
      if (TicketConsumeId != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(TicketConsumeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (RewardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardId);
      }
      if (CircleIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CircleIndex);
      }
      if (TicketConsumeId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TicketConsumeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RewardPush other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.RewardId != 0) {
        RewardId = other.RewardId;
      }
      if (other.CircleIndex != 0) {
        CircleIndex = other.CircleIndex;
      }
      if (other.TicketConsumeId != 0UL) {
        TicketConsumeId = other.TicketConsumeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 24: {
            RewardId = input.ReadUInt32();
            break;
          }
          case 32: {
            CircleIndex = input.ReadUInt32();
            break;
          }
          case 40: {
            TicketConsumeId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateTreasureTicketConsumeReq : pb::IMessage<UpdateTreasureTicketConsumeReq> {
    private static readonly pb::MessageParser<UpdateTreasureTicketConsumeReq> _parser = new pb::MessageParser<UpdateTreasureTicketConsumeReq>(() => new UpdateTreasureTicketConsumeReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTreasureTicketConsumeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTreasureTicketConsumeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTreasureTicketConsumeReq(UpdateTreasureTicketConsumeReq other) : this() {
      id_ = other.id_;
      rewardId_ = other.rewardId_;
      remark_ = other.remark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTreasureTicketConsumeReq Clone() {
      return new UpdateTreasureTicketConsumeReq(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "reward_id" field.</summary>
    public const int RewardIdFieldNumber = 2;
    private uint rewardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RewardId {
      get { return rewardId_; }
      set {
        rewardId_ = value;
      }
    }

    /// <summary>Field number for the "remark" field.</summary>
    public const int RemarkFieldNumber = 3;
    private string remark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTreasureTicketConsumeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTreasureTicketConsumeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RewardId != other.RewardId) return false;
      if (Remark != other.Remark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (RewardId != 0) hash ^= RewardId.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (RewardId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(RewardId);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Remark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (RewardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardId);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTreasureTicketConsumeReq other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.RewardId != 0) {
        RewardId = other.RewardId;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            RewardId = input.ReadUInt32();
            break;
          }
          case 26: {
            Remark = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateTreasureTicketConsumeResp : pb::IMessage<UpdateTreasureTicketConsumeResp> {
    private static readonly pb::MessageParser<UpdateTreasureTicketConsumeResp> _parser = new pb::MessageParser<UpdateTreasureTicketConsumeResp>(() => new UpdateTreasureTicketConsumeResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTreasureTicketConsumeResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTreasureTicketConsumeResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTreasureTicketConsumeResp(UpdateTreasureTicketConsumeResp other) : this() {
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTreasureTicketConsumeResp Clone() {
      return new UpdateTreasureTicketConsumeResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTreasureTicketConsumeResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTreasureTicketConsumeResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTreasureTicketConsumeResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BeachShellReq : pb::IMessage<BeachShellReq> {
    private static readonly pb::MessageParser<BeachShellReq> _parser = new pb::MessageParser<BeachShellReq>(() => new BeachShellReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BeachShellReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeachShellReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeachShellReq(BeachShellReq other) : this() {
      userId_ = other.userId_;
      toolId_ = other.toolId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeachShellReq Clone() {
      return new BeachShellReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "tool_id" field.</summary>
    public const int ToolIdFieldNumber = 2;
    private uint toolId_;
    /// <summary>
    /// 消耗的道具id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ToolId {
      get { return toolId_; }
      set {
        toolId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BeachShellReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BeachShellReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ToolId != other.ToolId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (ToolId != 0) hash ^= ToolId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (ToolId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ToolId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (ToolId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ToolId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BeachShellReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.ToolId != 0) {
        ToolId = other.ToolId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
          case 16: {
            ToolId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BeachShellResp : pb::IMessage<BeachShellResp> {
    private static readonly pb::MessageParser<BeachShellResp> _parser = new pb::MessageParser<BeachShellResp>(() => new BeachShellResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BeachShellResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeachShellResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeachShellResp(BeachShellResp other) : this() {
      statusCode_ = other.statusCode_;
      rewardId_ = other.rewardId_;
      rewardName_ = other.rewardName_;
      rewardIcon_ = other.rewardIcon_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeachShellResp Clone() {
      return new BeachShellResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "reward_id" field.</summary>
    public const int RewardIdFieldNumber = 2;
    private uint rewardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RewardId {
      get { return rewardId_; }
      set {
        rewardId_ = value;
      }
    }

    /// <summary>Field number for the "reward_name" field.</summary>
    public const int RewardNameFieldNumber = 3;
    private string rewardName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RewardName {
      get { return rewardName_; }
      set {
        rewardName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reward_icon" field.</summary>
    public const int RewardIconFieldNumber = 4;
    private string rewardIcon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RewardIcon {
      get { return rewardIcon_; }
      set {
        rewardIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BeachShellResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BeachShellResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      if (RewardId != other.RewardId) return false;
      if (RewardName != other.RewardName) return false;
      if (RewardIcon != other.RewardIcon) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (RewardId != 0) hash ^= RewardId.GetHashCode();
      if (RewardName.Length != 0) hash ^= RewardName.GetHashCode();
      if (RewardIcon.Length != 0) hash ^= RewardIcon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (RewardId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(RewardId);
      }
      if (RewardName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RewardName);
      }
      if (RewardIcon.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RewardIcon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (RewardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardId);
      }
      if (RewardName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardName);
      }
      if (RewardIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardIcon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BeachShellResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.RewardId != 0) {
        RewardId = other.RewardId;
      }
      if (other.RewardName.Length != 0) {
        RewardName = other.RewardName;
      }
      if (other.RewardIcon.Length != 0) {
        RewardIcon = other.RewardIcon;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
          case 16: {
            RewardId = input.ReadUInt32();
            break;
          }
          case 26: {
            RewardName = input.ReadString();
            break;
          }
          case 34: {
            RewardIcon = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 人物位置信息, 结构套在message, 是否放到公共位置
  /// </summary>
  public sealed partial class Pos : pb::IMessage<Pos> {
    private static readonly pb::MessageParser<Pos> _parser = new pb::MessageParser<Pos>(() => new Pos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pos(Pos other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pos Clone() {
      return new Pos(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private int z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Z != other.Z) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Z != 0) hash ^= Z.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Z != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Z != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Z);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pos other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Z != 0) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Z = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 人物移动信息
  /// </summary>
  public sealed partial class Move : pb::IMessage<Move> {
    private static readonly pb::MessageParser<Move> _parser = new pb::MessageParser<Move>(() => new Move());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Move> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Move() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Move(Move other) : this() {
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      index_ = other.index_;
      state_ = other.state_;
      fromUserId_ = other.fromUserId_;
      toUserId_ = other.toUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Move Clone() {
      return new Move(this);
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 1;
    private global::Treasure.Pos pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Treasure.Pos Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 2;
    private global::Treasure.Pos dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Treasure.Pos Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 3;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private int state_;
    /// <summary>
    ///移动状态 1：起步 2：移动中 3：移动结束
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 5;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 6;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Move);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Move other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      if (Index != other.Index) return false;
      if (State != other.State) return false;
      if (FromUserId != other.FromUserId) return false;
      if (ToUserId != other.ToUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pos_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pos);
      }
      if (dir_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Dir);
      }
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Index);
      }
      if (State != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(State);
      }
      if (FromUserId != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(FromUserId);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(ToUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Move other) {
      if (other == null) {
        return;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::Treasure.Pos();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::Treasure.Pos();
        }
        Dir.MergeFrom(other.Dir);
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (pos_ == null) {
              Pos = new global::Treasure.Pos();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 18: {
            if (dir_ == null) {
              Dir = new global::Treasure.Pos();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 24: {
            Index = input.ReadUInt32();
            break;
          }
          case 32: {
            State = input.ReadInt32();
            break;
          }
          case 40: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 48: {
            ToUserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MoveResp : pb::IMessage<MoveResp> {
    private static readonly pb::MessageParser<MoveResp> _parser = new pb::MessageParser<MoveResp>(() => new MoveResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveResp(MoveResp other) : this() {
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveResp Clone() {
      return new MoveResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangeSkinReq : pb::IMessage<ChangeSkinReq> {
    private static readonly pb::MessageParser<ChangeSkinReq> _parser = new pb::MessageParser<ChangeSkinReq>(() => new ChangeSkinReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeSkinReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeSkinReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeSkinReq(ChangeSkinReq other) : this() {
      userId_ = other.userId_;
      avatarIds_ = other.avatarIds_.Clone();
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeSkinReq Clone() {
      return new ChangeSkinReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "AvatarIds" field.</summary>
    public const int AvatarIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_avatarIds_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> avatarIds_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> AvatarIds {
      get { return avatarIds_; }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 3;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeSkinReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeSkinReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if(!avatarIds_.Equals(other.avatarIds_)) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      hash ^= avatarIds_.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      avatarIds_.WriteTo(output, _repeated_avatarIds_codec);
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      size += avatarIds_.CalculateSize(_repeated_avatarIds_codec);
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeSkinReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      avatarIds_.Add(other.avatarIds_);
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
          case 18:
          case 16: {
            avatarIds_.AddEntriesFrom(input, _repeated_avatarIds_codec);
            break;
          }
          case 24: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangeSkinResp : pb::IMessage<ChangeSkinResp> {
    private static readonly pb::MessageParser<ChangeSkinResp> _parser = new pb::MessageParser<ChangeSkinResp>(() => new ChangeSkinResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeSkinResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeSkinResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeSkinResp(ChangeSkinResp other) : this() {
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeSkinResp Clone() {
      return new ChangeSkinResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeSkinResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeSkinResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeSkinResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OtherChangeSkinPush : pb::IMessage<OtherChangeSkinPush> {
    private static readonly pb::MessageParser<OtherChangeSkinPush> _parser = new pb::MessageParser<OtherChangeSkinPush>(() => new OtherChangeSkinPush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtherChangeSkinPush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherChangeSkinPush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherChangeSkinPush(OtherChangeSkinPush other) : this() {
      fromUserId_ = other.fromUserId_;
      avatarIds_ = other.avatarIds_.Clone();
      toUserId_ = other.toUserId_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherChangeSkinPush Clone() {
      return new OtherChangeSkinPush(this);
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "AvatarIds" field.</summary>
    public const int AvatarIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_avatarIds_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> avatarIds_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> AvatarIds {
      get { return avatarIds_; }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 3;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 4;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtherChangeSkinPush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtherChangeSkinPush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if(!avatarIds_.Equals(other.avatarIds_)) return false;
      if (ToUserId != other.ToUserId) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      hash ^= avatarIds_.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      avatarIds_.WriteTo(output, _repeated_avatarIds_codec);
      if (ToUserId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ToUserId);
      }
      if (Index != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      size += avatarIds_.CalculateSize(_repeated_avatarIds_codec);
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtherChangeSkinPush other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      avatarIds_.Add(other.avatarIds_);
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 18:
          case 16: {
            avatarIds_.AddEntriesFrom(input, _repeated_avatarIds_codec);
            break;
          }
          case 24: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 32: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DoActionReq : pb::IMessage<DoActionReq> {
    private static readonly pb::MessageParser<DoActionReq> _parser = new pb::MessageParser<DoActionReq>(() => new DoActionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DoActionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoActionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoActionReq(DoActionReq other) : this() {
      userId_ = other.userId_;
      action_ = other.action_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoActionReq Clone() {
      return new DoActionReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 2;
    private uint action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 3;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DoActionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DoActionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Action != other.Action) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (Action != 0) hash ^= Action.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (Action != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Action);
      }
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Action);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DoActionReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.Action != 0) {
        Action = other.Action;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
          case 16: {
            Action = input.ReadUInt32();
            break;
          }
          case 24: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DoActionResp : pb::IMessage<DoActionResp> {
    private static readonly pb::MessageParser<DoActionResp> _parser = new pb::MessageParser<DoActionResp>(() => new DoActionResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DoActionResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoActionResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoActionResp(DoActionResp other) : this() {
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoActionResp Clone() {
      return new DoActionResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DoActionResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DoActionResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DoActionResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OtherDoActionPush : pb::IMessage<OtherDoActionPush> {
    private static readonly pb::MessageParser<OtherDoActionPush> _parser = new pb::MessageParser<OtherDoActionPush>(() => new OtherDoActionPush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtherDoActionPush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherDoActionPush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherDoActionPush(OtherDoActionPush other) : this() {
      fromUserId_ = other.fromUserId_;
      action_ = other.action_;
      toUserId_ = other.toUserId_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtherDoActionPush Clone() {
      return new OtherDoActionPush(this);
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 2;
    private uint action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 3;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 4;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtherDoActionPush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtherDoActionPush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (Action != other.Action) return false;
      if (ToUserId != other.ToUserId) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (Action != 0) hash ^= Action.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (Action != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Action);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ToUserId);
      }
      if (Index != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Action);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtherDoActionPush other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.Action != 0) {
        Action = other.Action;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 16: {
            Action = input.ReadUInt32();
            break;
          }
          case 24: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 32: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 网络状态
  /// </summary>
  public sealed partial class NetStateReq : pb::IMessage<NetStateReq> {
    private static readonly pb::MessageParser<NetStateReq> _parser = new pb::MessageParser<NetStateReq>(() => new NetStateReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetStateReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetStateReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetStateReq(NetStateReq other) : this() {
      userId_ = other.userId_;
      networkState_ = other.networkState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetStateReq Clone() {
      return new NetStateReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "network_state" field.</summary>
    public const int NetworkStateFieldNumber = 2;
    private uint networkState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NetworkState {
      get { return networkState_; }
      set {
        networkState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetStateReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetStateReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (NetworkState != other.NetworkState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (NetworkState != 0) hash ^= NetworkState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (NetworkState != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NetworkState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (NetworkState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NetworkState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetStateReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.NetworkState != 0) {
        NetworkState = other.NetworkState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
          case 16: {
            NetworkState = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetStateResp : pb::IMessage<NetStateResp> {
    private static readonly pb::MessageParser<NetStateResp> _parser = new pb::MessageParser<NetStateResp>(() => new NetStateResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetStateResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetStateResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetStateResp(NetStateResp other) : this() {
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetStateResp Clone() {
      return new NetStateResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetStateResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetStateResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetStateResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 全局公告
  /// </summary>
  public sealed partial class NoticePush : pb::IMessage<NoticePush> {
    private static readonly pb::MessageParser<NoticePush> _parser = new pb::MessageParser<NoticePush>(() => new NoticePush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NoticePush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoticePush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoticePush(NoticePush other) : this() {
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoticePush Clone() {
      return new NoticePush(this);
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 1;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NoticePush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NoticePush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msg.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NoticePush other) {
      if (other == null) {
        return;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 查看新手引导是否完成
  /// </summary>
  public sealed partial class CheckBeginLaunchReq : pb::IMessage<CheckBeginLaunchReq> {
    private static readonly pb::MessageParser<CheckBeginLaunchReq> _parser = new pb::MessageParser<CheckBeginLaunchReq>(() => new CheckBeginLaunchReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckBeginLaunchReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckBeginLaunchReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckBeginLaunchReq(CheckBeginLaunchReq other) : this() {
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckBeginLaunchReq Clone() {
      return new CheckBeginLaunchReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckBeginLaunchReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckBeginLaunchReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckBeginLaunchReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckBeginLaunchResp : pb::IMessage<CheckBeginLaunchResp> {
    private static readonly pb::MessageParser<CheckBeginLaunchResp> _parser = new pb::MessageParser<CheckBeginLaunchResp>(() => new CheckBeginLaunchResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckBeginLaunchResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckBeginLaunchResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckBeginLaunchResp(CheckBeginLaunchResp other) : this() {
      statusCode_ = other.statusCode_;
      isComplete_ = other.isComplete_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckBeginLaunchResp Clone() {
      return new CheckBeginLaunchResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "is_complete" field.</summary>
    public const int IsCompleteFieldNumber = 2;
    private uint isComplete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint IsComplete {
      get { return isComplete_; }
      set {
        isComplete_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckBeginLaunchResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckBeginLaunchResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      if (IsComplete != other.IsComplete) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (IsComplete != 0) hash ^= IsComplete.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (IsComplete != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(IsComplete);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (IsComplete != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IsComplete);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckBeginLaunchResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.IsComplete != 0) {
        IsComplete = other.IsComplete;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
          case 16: {
            IsComplete = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BeginLaunchCompleteReq : pb::IMessage<BeginLaunchCompleteReq> {
    private static readonly pb::MessageParser<BeginLaunchCompleteReq> _parser = new pb::MessageParser<BeginLaunchCompleteReq>(() => new BeginLaunchCompleteReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BeginLaunchCompleteReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeginLaunchCompleteReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeginLaunchCompleteReq(BeginLaunchCompleteReq other) : this() {
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeginLaunchCompleteReq Clone() {
      return new BeginLaunchCompleteReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BeginLaunchCompleteReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BeginLaunchCompleteReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BeginLaunchCompleteReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BeginLaunchCompleteResp : pb::IMessage<BeginLaunchCompleteResp> {
    private static readonly pb::MessageParser<BeginLaunchCompleteResp> _parser = new pb::MessageParser<BeginLaunchCompleteResp>(() => new BeginLaunchCompleteResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BeginLaunchCompleteResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeginLaunchCompleteResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeginLaunchCompleteResp(BeginLaunchCompleteResp other) : this() {
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeginLaunchCompleteResp Clone() {
      return new BeginLaunchCompleteResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BeginLaunchCompleteResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BeginLaunchCompleteResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BeginLaunchCompleteResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 挖宝奖励配置
  /// </summary>
  public sealed partial class TreasureRewardConfData : pb::IMessage<TreasureRewardConfData> {
    private static readonly pb::MessageParser<TreasureRewardConfData> _parser = new pb::MessageParser<TreasureRewardConfData>(() => new TreasureRewardConfData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TreasureRewardConfData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRewardConfData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRewardConfData(TreasureRewardConfData other) : this() {
      rewardId_ = other.rewardId_;
      rewardName_ = other.rewardName_;
      rewardRare_ = other.rewardRare_;
      rewardType_ = other.rewardType_;
      rewardCollection_ = other.rewardCollection_;
      rewardIcon_ = other.rewardIcon_;
      rewardQuantity_ = other.rewardQuantity_;
      rewardWeight_ = other.rewardWeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRewardConfData Clone() {
      return new TreasureRewardConfData(this);
    }

    /// <summary>Field number for the "reward_id" field.</summary>
    public const int RewardIdFieldNumber = 1;
    private uint rewardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RewardId {
      get { return rewardId_; }
      set {
        rewardId_ = value;
      }
    }

    /// <summary>Field number for the "reward_name" field.</summary>
    public const int RewardNameFieldNumber = 2;
    private string rewardName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RewardName {
      get { return rewardName_; }
      set {
        rewardName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reward_rare" field.</summary>
    public const int RewardRareFieldNumber = 3;
    private uint rewardRare_;
    /// <summary>
    /// 奖励稀有度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RewardRare {
      get { return rewardRare_; }
      set {
        rewardRare_ = value;
      }
    }

    /// <summary>Field number for the "reward_type" field.</summary>
    public const int RewardTypeFieldNumber = 4;
    private uint rewardType_;
    /// <summary>
    /// 奖励类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RewardType {
      get { return rewardType_; }
      set {
        rewardType_ = value;
      }
    }

    /// <summary>Field number for the "reward_collection" field.</summary>
    public const int RewardCollectionFieldNumber = 5;
    private uint rewardCollection_;
    /// <summary>
    /// 数藏id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RewardCollection {
      get { return rewardCollection_; }
      set {
        rewardCollection_ = value;
      }
    }

    /// <summary>Field number for the "reward_icon" field.</summary>
    public const int RewardIconFieldNumber = 6;
    private string rewardIcon_ = "";
    /// <summary>
    /// 奖励icon
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RewardIcon {
      get { return rewardIcon_; }
      set {
        rewardIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reward_quantity" field.</summary>
    public const int RewardQuantityFieldNumber = 7;
    private uint rewardQuantity_;
    /// <summary>
    /// 奖励数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RewardQuantity {
      get { return rewardQuantity_; }
      set {
        rewardQuantity_ = value;
      }
    }

    /// <summary>Field number for the "reward_weight" field.</summary>
    public const int RewardWeightFieldNumber = 8;
    private uint rewardWeight_;
    /// <summary>
    /// 奖励权重
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RewardWeight {
      get { return rewardWeight_; }
      set {
        rewardWeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TreasureRewardConfData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TreasureRewardConfData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RewardId != other.RewardId) return false;
      if (RewardName != other.RewardName) return false;
      if (RewardRare != other.RewardRare) return false;
      if (RewardType != other.RewardType) return false;
      if (RewardCollection != other.RewardCollection) return false;
      if (RewardIcon != other.RewardIcon) return false;
      if (RewardQuantity != other.RewardQuantity) return false;
      if (RewardWeight != other.RewardWeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RewardId != 0) hash ^= RewardId.GetHashCode();
      if (RewardName.Length != 0) hash ^= RewardName.GetHashCode();
      if (RewardRare != 0) hash ^= RewardRare.GetHashCode();
      if (RewardType != 0) hash ^= RewardType.GetHashCode();
      if (RewardCollection != 0) hash ^= RewardCollection.GetHashCode();
      if (RewardIcon.Length != 0) hash ^= RewardIcon.GetHashCode();
      if (RewardQuantity != 0) hash ^= RewardQuantity.GetHashCode();
      if (RewardWeight != 0) hash ^= RewardWeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RewardId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RewardId);
      }
      if (RewardName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RewardName);
      }
      if (RewardRare != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(RewardRare);
      }
      if (RewardType != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(RewardType);
      }
      if (RewardCollection != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(RewardCollection);
      }
      if (RewardIcon.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RewardIcon);
      }
      if (RewardQuantity != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(RewardQuantity);
      }
      if (RewardWeight != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(RewardWeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RewardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardId);
      }
      if (RewardName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardName);
      }
      if (RewardRare != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardRare);
      }
      if (RewardType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardType);
      }
      if (RewardCollection != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardCollection);
      }
      if (RewardIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardIcon);
      }
      if (RewardQuantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardQuantity);
      }
      if (RewardWeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RewardWeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TreasureRewardConfData other) {
      if (other == null) {
        return;
      }
      if (other.RewardId != 0) {
        RewardId = other.RewardId;
      }
      if (other.RewardName.Length != 0) {
        RewardName = other.RewardName;
      }
      if (other.RewardRare != 0) {
        RewardRare = other.RewardRare;
      }
      if (other.RewardType != 0) {
        RewardType = other.RewardType;
      }
      if (other.RewardCollection != 0) {
        RewardCollection = other.RewardCollection;
      }
      if (other.RewardIcon.Length != 0) {
        RewardIcon = other.RewardIcon;
      }
      if (other.RewardQuantity != 0) {
        RewardQuantity = other.RewardQuantity;
      }
      if (other.RewardWeight != 0) {
        RewardWeight = other.RewardWeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RewardId = input.ReadUInt32();
            break;
          }
          case 18: {
            RewardName = input.ReadString();
            break;
          }
          case 24: {
            RewardRare = input.ReadUInt32();
            break;
          }
          case 32: {
            RewardType = input.ReadUInt32();
            break;
          }
          case 40: {
            RewardCollection = input.ReadUInt32();
            break;
          }
          case 50: {
            RewardIcon = input.ReadString();
            break;
          }
          case 56: {
            RewardQuantity = input.ReadUInt32();
            break;
          }
          case 64: {
            RewardWeight = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TreasureRewardConfListReq : pb::IMessage<TreasureRewardConfListReq> {
    private static readonly pb::MessageParser<TreasureRewardConfListReq> _parser = new pb::MessageParser<TreasureRewardConfListReq>(() => new TreasureRewardConfListReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TreasureRewardConfListReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRewardConfListReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRewardConfListReq(TreasureRewardConfListReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRewardConfListReq Clone() {
      return new TreasureRewardConfListReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TreasureRewardConfListReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TreasureRewardConfListReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TreasureRewardConfListReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class TreasureRewardConfListResp : pb::IMessage<TreasureRewardConfListResp> {
    private static readonly pb::MessageParser<TreasureRewardConfListResp> _parser = new pb::MessageParser<TreasureRewardConfListResp>(() => new TreasureRewardConfListResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TreasureRewardConfListResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRewardConfListResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRewardConfListResp(TreasureRewardConfListResp other) : this() {
      list_ = other.list_.Clone();
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureRewardConfListResp Clone() {
      return new TreasureRewardConfListResp(this);
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Treasure.TreasureRewardConfData> _repeated_list_codec
        = pb::FieldCodec.ForMessage(10, global::Treasure.TreasureRewardConfData.Parser);
    private readonly pbc::RepeatedField<global::Treasure.TreasureRewardConfData> list_ = new pbc::RepeatedField<global::Treasure.TreasureRewardConfData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Treasure.TreasureRewardConfData> List {
      get { return list_; }
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 2;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TreasureRewardConfListResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TreasureRewardConfListResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!list_.Equals(other.list_)) return false;
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= list_.GetHashCode();
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _repeated_list_codec);
      if (StatusCode != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_repeated_list_codec);
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TreasureRewardConfListResp other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
          case 16: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 本次挖宝活动结束
  /// </summary>
  public sealed partial class TreasureActivityEndPush : pb::IMessage<TreasureActivityEndPush> {
    private static readonly pb::MessageParser<TreasureActivityEndPush> _parser = new pb::MessageParser<TreasureActivityEndPush>(() => new TreasureActivityEndPush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TreasureActivityEndPush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureActivityEndPush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureActivityEndPush(TreasureActivityEndPush other) : this() {
      room_ = other.room_ != null ? other.room_.Clone() : null;
      start_ = other.start_;
      end_ = other.end_;
      toUserId_ = other.toUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureActivityEndPush Clone() {
      return new TreasureActivityEndPush(this);
    }

    /// <summary>Field number for the "room" field.</summary>
    public const int RoomFieldNumber = 1;
    private global::Treasure.Room room_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Treasure.Room Room {
      get { return room_; }
      set {
        room_ = value;
      }
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 2;
    private uint start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 3;
    private uint end_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 4;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TreasureActivityEndPush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TreasureActivityEndPush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Room, other.Room)) return false;
      if (Start != other.Start) return false;
      if (End != other.End) return false;
      if (ToUserId != other.ToUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (room_ != null) hash ^= Room.GetHashCode();
      if (Start != 0) hash ^= Start.GetHashCode();
      if (End != 0) hash ^= End.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (room_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Room);
      }
      if (Start != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Start);
      }
      if (End != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(End);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(ToUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (room_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Room);
      }
      if (Start != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Start);
      }
      if (End != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(End);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TreasureActivityEndPush other) {
      if (other == null) {
        return;
      }
      if (other.room_ != null) {
        if (room_ == null) {
          Room = new global::Treasure.Room();
        }
        Room.MergeFrom(other.Room);
      }
      if (other.Start != 0) {
        Start = other.Start;
      }
      if (other.End != 0) {
        End = other.End;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (room_ == null) {
              Room = new global::Treasure.Room();
            }
            input.ReadMessage(Room);
            break;
          }
          case 16: {
            Start = input.ReadUInt32();
            break;
          }
          case 24: {
            End = input.ReadUInt32();
            break;
          }
          case 32: {
            ToUserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 给挖宝全体发世界频道网易消息
  /// </summary>
  public sealed partial class TreasureBrocastToAllReq : pb::IMessage<TreasureBrocastToAllReq> {
    private static readonly pb::MessageParser<TreasureBrocastToAllReq> _parser = new pb::MessageParser<TreasureBrocastToAllReq>(() => new TreasureBrocastToAllReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TreasureBrocastToAllReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureBrocastToAllReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureBrocastToAllReq(TreasureBrocastToAllReq other) : this() {
      userId_ = other.userId_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureBrocastToAllReq Clone() {
      return new TreasureBrocastToAllReq(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TreasureBrocastToAllReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TreasureBrocastToAllReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TreasureBrocastToAllReq other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TreasureBrocastToAllResp : pb::IMessage<TreasureBrocastToAllResp> {
    private static readonly pb::MessageParser<TreasureBrocastToAllResp> _parser = new pb::MessageParser<TreasureBrocastToAllResp>(() => new TreasureBrocastToAllResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TreasureBrocastToAllResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureBrocastToAllResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureBrocastToAllResp(TreasureBrocastToAllResp other) : this() {
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TreasureBrocastToAllResp Clone() {
      return new TreasureBrocastToAllResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TreasureBrocastToAllResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TreasureBrocastToAllResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TreasureBrocastToAllResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SitdownReq : pb::IMessage<SitdownReq> {
    private static readonly pb::MessageParser<SitdownReq> _parser = new pb::MessageParser<SitdownReq>(() => new SitdownReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SitdownReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SitdownReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SitdownReq(SitdownReq other) : this() {
      sitdown_ = other.sitdown_;
      userId_ = other.userId_;
      index_ = other.index_;
      isLeave_ = other.isLeave_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SitdownReq Clone() {
      return new SitdownReq(this);
    }

    /// <summary>Field number for the "sitdown" field.</summary>
    public const int SitdownFieldNumber = 1;
    private string sitdown_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sitdown {
      get { return sitdown_; }
      set {
        sitdown_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 3;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "is_leave" field.</summary>
    public const int IsLeaveFieldNumber = 4;
    private bool isLeave_;
    /// <summary>
    /// false: 坐下; true: 离开
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLeave {
      get { return isLeave_; }
      set {
        isLeave_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SitdownReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SitdownReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sitdown != other.Sitdown) return false;
      if (UserId != other.UserId) return false;
      if (Index != other.Index) return false;
      if (IsLeave != other.IsLeave) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sitdown.Length != 0) hash ^= Sitdown.GetHashCode();
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (IsLeave != false) hash ^= IsLeave.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sitdown.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Sitdown);
      }
      if (UserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(UserId);
      }
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Index);
      }
      if (IsLeave != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsLeave);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sitdown.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sitdown);
      }
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (IsLeave != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SitdownReq other) {
      if (other == null) {
        return;
      }
      if (other.Sitdown.Length != 0) {
        Sitdown = other.Sitdown;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.IsLeave != false) {
        IsLeave = other.IsLeave;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Sitdown = input.ReadString();
            break;
          }
          case 16: {
            UserId = input.ReadUInt64();
            break;
          }
          case 24: {
            Index = input.ReadUInt32();
            break;
          }
          case 32: {
            IsLeave = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SitdownResp : pb::IMessage<SitdownResp> {
    private static readonly pb::MessageParser<SitdownResp> _parser = new pb::MessageParser<SitdownResp>(() => new SitdownResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SitdownResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SitdownResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SitdownResp(SitdownResp other) : this() {
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SitdownResp Clone() {
      return new SitdownResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SitdownResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SitdownResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SitdownResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SitdownPush : pb::IMessage<SitdownPush> {
    private static readonly pb::MessageParser<SitdownPush> _parser = new pb::MessageParser<SitdownPush>(() => new SitdownPush());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SitdownPush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SitdownPush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SitdownPush(SitdownPush other) : this() {
      sitdown_ = other.sitdown_;
      fromUserId_ = other.fromUserId_;
      toUserId_ = other.toUserId_;
      index_ = other.index_;
      isLeave_ = other.isLeave_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SitdownPush Clone() {
      return new SitdownPush(this);
    }

    /// <summary>Field number for the "sitdown" field.</summary>
    public const int SitdownFieldNumber = 1;
    private string sitdown_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sitdown {
      get { return sitdown_; }
      set {
        sitdown_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 2;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 3;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 4;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "is_leave" field.</summary>
    public const int IsLeaveFieldNumber = 5;
    private bool isLeave_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLeave {
      get { return isLeave_; }
      set {
        isLeave_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SitdownPush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SitdownPush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sitdown != other.Sitdown) return false;
      if (FromUserId != other.FromUserId) return false;
      if (ToUserId != other.ToUserId) return false;
      if (Index != other.Index) return false;
      if (IsLeave != other.IsLeave) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sitdown.Length != 0) hash ^= Sitdown.GetHashCode();
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (IsLeave != false) hash ^= IsLeave.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sitdown.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Sitdown);
      }
      if (FromUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(FromUserId);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ToUserId);
      }
      if (Index != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Index);
      }
      if (IsLeave != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsLeave);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sitdown.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sitdown);
      }
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (IsLeave != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SitdownPush other) {
      if (other == null) {
        return;
      }
      if (other.Sitdown.Length != 0) {
        Sitdown = other.Sitdown;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.IsLeave != false) {
        IsLeave = other.IsLeave;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Sitdown = input.ReadString();
            break;
          }
          case 16: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 24: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 32: {
            Index = input.ReadUInt32();
            break;
          }
          case 40: {
            IsLeave = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SummonBackReq : pb::IMessage<SummonBackReq> {
    private static readonly pb::MessageParser<SummonBackReq> _parser = new pb::MessageParser<SummonBackReq>(() => new SummonBackReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SummonBackReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SummonBackReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SummonBackReq(SummonBackReq other) : this() {
      fromUserId_ = other.fromUserId_;
      toUserId_ = other.toUserId_;
      landId_ = other.landId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SummonBackReq Clone() {
      return new SummonBackReq(this);
    }

    /// <summary>Field number for the "from_user_id" field.</summary>
    public const int FromUserIdFieldNumber = 1;
    private ulong fromUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = value;
      }
    }

    /// <summary>Field number for the "to_user_id" field.</summary>
    public const int ToUserIdFieldNumber = 2;
    private ulong toUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = value;
      }
    }

    /// <summary>Field number for the "land_id" field.</summary>
    public const int LandIdFieldNumber = 3;
    private string landId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LandId {
      get { return landId_; }
      set {
        landId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SummonBackReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SummonBackReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserId != other.FromUserId) return false;
      if (ToUserId != other.ToUserId) return false;
      if (LandId != other.LandId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserId != 0UL) hash ^= FromUserId.GetHashCode();
      if (ToUserId != 0UL) hash ^= ToUserId.GetHashCode();
      if (LandId.Length != 0) hash ^= LandId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromUserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FromUserId);
      }
      if (ToUserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToUserId);
      }
      if (LandId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LandId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FromUserId);
      }
      if (ToUserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToUserId);
      }
      if (LandId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LandId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SummonBackReq other) {
      if (other == null) {
        return;
      }
      if (other.FromUserId != 0UL) {
        FromUserId = other.FromUserId;
      }
      if (other.ToUserId != 0UL) {
        ToUserId = other.ToUserId;
      }
      if (other.LandId.Length != 0) {
        LandId = other.LandId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FromUserId = input.ReadUInt64();
            break;
          }
          case 16: {
            ToUserId = input.ReadUInt64();
            break;
          }
          case 26: {
            LandId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SummonBackResp : pb::IMessage<SummonBackResp> {
    private static readonly pb::MessageParser<SummonBackResp> _parser = new pb::MessageParser<SummonBackResp>(() => new SummonBackResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SummonBackResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SummonBackResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SummonBackResp(SummonBackResp other) : this() {
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SummonBackResp Clone() {
      return new SummonBackResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SummonBackResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SummonBackResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SummonBackResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LandUsersReq : pb::IMessage<LandUsersReq> {
    private static readonly pb::MessageParser<LandUsersReq> _parser = new pb::MessageParser<LandUsersReq>(() => new LandUsersReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LandUsersReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandUsersReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandUsersReq(LandUsersReq other) : this() {
      landId_ = other.landId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandUsersReq Clone() {
      return new LandUsersReq(this);
    }

    /// <summary>Field number for the "land_id" field.</summary>
    public const int LandIdFieldNumber = 1;
    private string landId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LandId {
      get { return landId_; }
      set {
        landId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LandUsersReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LandUsersReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LandId != other.LandId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LandId.Length != 0) hash ^= LandId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LandId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LandId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LandId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LandId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LandUsersReq other) {
      if (other == null) {
        return;
      }
      if (other.LandId.Length != 0) {
        LandId = other.LandId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LandId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LandUsersResp : pb::IMessage<LandUsersResp> {
    private static readonly pb::MessageParser<LandUsersResp> _parser = new pb::MessageParser<LandUsersResp>(() => new LandUsersResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LandUsersResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Treasure.TreasureReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandUsersResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandUsersResp(LandUsersResp other) : this() {
      statusCode_ = other.statusCode_;
      userIds_ = other.userIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandUsersResp Clone() {
      return new LandUsersResp(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private uint statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "user_ids" field.</summary>
    public const int UserIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_userIds_codec
        = pb::FieldCodec.ForUInt64(18);
    private readonly pbc::RepeatedField<ulong> userIds_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> UserIds {
      get { return userIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LandUsersResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LandUsersResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      if(!userIds_.Equals(other.userIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      hash ^= userIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCode != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatusCode);
      }
      userIds_.WriteTo(output, _repeated_userIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      size += userIds_.CalculateSize(_repeated_userIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LandUsersResp other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      userIds_.Add(other.userIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            userIds_.AddEntriesFrom(input, _repeated_userIds_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
